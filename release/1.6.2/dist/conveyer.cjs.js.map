{"version":3,"file":"conveyer.cjs.js","sources":["../src/browser.ts","../src/utils.ts","../src/Conveyer.ts","../src/consts.ts","../src/reactive.ts","../src/index.ts","../src/index.cjs.ts"],"sourcesContent":["/**\n * egjs-conveyer\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nexport const IS_IE = /msie|trident/g.test(\n  (typeof window !== \"undefined\" && window?.navigator?.userAgent?.toLowerCase()) || \"\",\n);\n","/**\n * egjs-conveyer\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nexport function isString(val: any): val is string {\n  return typeof val === \"string\";\n}\n\nexport function findIndex<T>(arr: T[], callback: (element: T, index: number) => boolean) {\n  const length = arr.length;\n\n  for (let i = 0; i < length; ++i) {\n    if (callback(arr[i], i)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n\nexport function instanceOfElement(el: any): el is Element {\n  return el instanceof Element || el instanceof Node;\n}\n","/**\n * egjs-conveyer\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nimport Axes, { OnChange, OnHold, PanInput, WheelInput } from \"@egjs/axes\";\nimport Component from \"@egjs/component\";\nimport { IS_IE } from \"./browser\";\nimport { ReactiveSubscribe, Reactive, Ref } from \"@cfcs/core\";\nimport {\n  ConveyerEvents, ConveyerItem,\n  ConveyerOptions, FindItemOptions, ConveyerReactiveState,\n  ScrollIntoViewOptions,\n} from \"./types\";\nimport { instanceOfElement, isString } from \"./utils\";\n\n\n/**\n * Conveyer adds Drag gestures to your Native Scroll.\n * @ko Conveyer는 네이티브 스크롤에 드래그 제스처를 추가합니다.\n * @extends Component\n * @support {\"ie\": \"9+(with polyfill)\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"4.X+\"}\n * @example\n```html\n<div class=\"items\">\n  <div class=\"item\"></div>\n  <div class=\"item\"></div>\n  <div class=\"item\"></div>\n</div>\n<script>\nimport Conveyer from \"@egjs/conveyer\";\n\nconst conveyer = new Conveyer(\".items\");\n</script>\n```\n */\n@ReactiveSubscribe\nclass Conveyer extends Component<ConveyerEvents> {\n  protected _scrollAreaElement: HTMLElement;\n  protected _axes: Axes | null = null;\n  protected _items: ConveyerItem[] = [];\n  protected _size = 0;\n  protected _scrollSize = 0;\n  protected _options: ConveyerOptions;\n\n  private _scrollTimer = 0;\n  private _isWheelScroll = false;\n  private _isDragScroll = false;\n  private _isAnimationScroll = false;\n  private _scrollArea: string | HTMLElement | Ref<HTMLElement>;\n\n  /**\n   * Whether the scroll has reached the start.\n   * @ko 스크롤이 시작에 닿았는지 여부.\n   * @name Conveyer#isReachStart\n   * @type {boolean}\n   * @default true\n   * @readonly\n   * @example\n   * ```js\n   * import { Conveyer } from \"@egjs/conveyer\";\n   *\n   * const conveyer = new Conveyer(\".container\");\n   *\n   * conveyer.isReachStart\n   * ```\n   */\n  @Reactive(\"isReachStart\") private _isReachStart = true;\n  /**\n   * Whether the scroll has reached the end.\n   * @ko 스크롤이 끝에 닿았는지 여부.\n   * @name Conveyer#isReachEnd\n   * @type {boolean}\n   * @default false\n   * @readonly\n   * @example\n   * ```js\n   * import { Conveyer } from \"@egjs/conveyer\";\n   *\n   * const conveyer = new Conveyer(\".container\");\n   *\n   * conveyer.isReachEnd\n   * ```\n   */\n  @Reactive(\"isReachEnd\") private _isReachEnd = false;\n  /**\n   * the scroll position of the container\n   * @ko 컨테이너의 스크롤 위치\n   * @name Conveyer#scrollPos\n   * @type {number}\n   * @default 0\n   * @readonly\n   * @example\n   * ```js\n   * import { Conveyer } from \"@egjs/conveyer\";\n   *\n   * const conveyer = new Conveyer(\".container\");\n   *\n   * conveyer.scrollPos\n   * ```\n   */\n  @Reactive(\"scrollPos\") protected _pos = 0;\n  /**\n   * @param - A base element for a module <ko>모듈을 적용할 기준 엘리먼트</ko>\n   * @param - The option object of the InfiniteGrid module <ko>eg.InfiniteGrid 모듈의 옵션 객체</ko>\n   */\n  constructor(scrollArea: string | HTMLElement | Ref<HTMLElement>, options: ConveyerOptions = {}) {\n    super();\n    this._options = {\n      horizontal: true,\n      useDrag: true,\n      useSideWheel: false,\n      autoInit: true,\n      boundaryMargin: 0,\n      scrollDebounce: 100,\n      ...options,\n    };\n\n    this._scrollArea = scrollArea;\n    if (this._options.autoInit) {\n      this.init();\n    }\n  }\n  /**\n   * Finds an element for that direction.\n   * @ko 해당 방향에 대해 엘리먼트를 찾는다.]\n   * @see {@link /docs/examples/Methods direction's example} page for detailed information\n   * @param - direction of the element. \"start\" and \"end\" find inside. \"prev\" and \"next\" find outside. <ko>엘리먼트의 방향. \"start\", \"end\"는 안쪽으로 찾는다. \"prev\", \"next\"는 바깥쪽으로 찾는다.</ko>\n   * @param - Options for the `findElement` method. <ko>findElement 메서드의 옵션</ko>\n   * @example\n   * <p align=\"center\">\n   *  <img src=\"https://naver.github.io/egjs-conveyer/img/scrollIntoView1.png\" height=\"200\" />\n   * </p>\n   * <p align=\"center\">\n   *   <img src=\"https://naver.github.io/egjs-conveyer/img/scrollIntoView2.png\" height=\"210\" />\n   * </p>\n   */\n  public findElement(direction: \"start\" | \"end\" | \"prev\" | \"next\", options: FindItemOptions = {}) {\n    return this.findItem(direction, options)?.element || null;\n  }\n  /**\n   * Finds an item for an element or its direction.\n   * @ko 엘리먼트 또는 해당 방향에 대해 아이템을 찾는다.\n   * @see {@link /docs/examples/Methods direction's example} page for detailed information\n   * @param - direction of the element. \"start\" and \"end\" find inside. \"prev\" and \"next\" find outside. <ko>엘리먼트의 방향. \"start\", \"end\"는 안쪽으로 찾는다. \"prev\", \"next\"는 바깥쪽으로 찾는다.</ko>\n   * @param - Options for the `findItem` method. <ko>`findItem` 메서드의 옵션</ko>\n   * @example\n   * <p align=\"center\">\n   *  <img src=\"https://naver.github.io/egjs-conveyer/img/scrollIntoView1.png\" height=\"200\" />\n   * </p>\n   * <p align=\"center\">\n   *   <img src=\"https://naver.github.io/egjs-conveyer/img/scrollIntoView2.png\" height=\"210\" />\n   * </p>\n   */\n  public findItem(\n    target: HTMLElement | \"start\" | \"end\" | \"prev\" | \"next\",\n    options: FindItemOptions = {},\n  ): ConveyerItem | null {\n    const pos = this._pos;\n    const scrollSize = this._scrollSize;\n    const size = this._size;\n    const hitTest = options?.hitTest ?? 1;\n    const items = [...this._items];\n    const length = items.length;\n    const endPos = pos + size;\n    const sibling = options.sibling;\n    const intersection = options.intersection;\n    const startVirtualItem = { pos: 0, size: 0 };\n    const endVirtualItem = { pos: scrollSize, size: 0 };\n\n    if (items[0].pos > 0) {\n      items.unshift(startVirtualItem);\n    }\n    if (length && items[length - 1].pos + items[length - 1].size < scrollSize) {\n      items.push(endVirtualItem);\n    }\n    let selectedItem: ConveyerItem | undefined;\n\n\n    if (target === \"start\") {\n      if (pos < 0) {\n        return null;\n      }\n      const selectedItems = items.filter(item => {\n        const itemSize = item.size;\n        const dist = item.pos - pos;\n        const dist2 = dist + itemSize;\n\n        return (dist >= 0)\n          || (dist2 > 0 && intersection)\n          || (dist2 >= 0 && (!itemSize || Math.abs(dist2) / itemSize >= hitTest));\n      });\n\n      selectedItem = (selectedItems[0] === startVirtualItem && selectedItems[1]) || selectedItems[0];\n    } else if (target === \"end\") {\n      if (pos > scrollSize - size) {\n        return null;\n      }\n      const selectedItems = items.filter(item => {\n        const itemSize = item.size;\n        const dist = item.pos + itemSize - endPos;\n        const dist2 = dist - itemSize;\n\n        return dist <= 0\n          || (dist2 < 0 && intersection)\n          || (dist2 <= 0 && (!itemSize || Math.abs(dist2) / itemSize >= hitTest));\n      }).reverse();\n\n      selectedItem = (selectedItems[0] === endVirtualItem && selectedItems[1]) || selectedItems[0];\n    } else if (target === \"prev\") {\n      selectedItem = items.filter(item => {\n        const itemSize = item.size;\n        const dist = item.pos + itemSize - pos;\n        const dist2 = dist - itemSize;\n\n        return dist <= 0\n          || (dist2 < 0 && intersection)\n          || (dist2 <= 0 && (!itemSize || Math.abs(dist2) / itemSize >= hitTest));\n      }).reverse()[0];\n    } else if (target === \"next\") {\n      selectedItem = items.filter(item => {\n        const itemSize = item.size;\n        const dist = item.pos - endPos;\n        const dist2 = dist + itemSize;\n\n        return dist >= 0\n          || (dist2 > 0 && intersection)\n          || (dist2 >= 0 && (!itemSize || Math.abs(dist2) / itemSize >= hitTest));\n      })[0];\n    } else {\n      return this._getItem(target);\n    }\n    if (sibling && selectedItem) {\n      const selectedIndex = items.indexOf(selectedItem);\n\n      if (selectedIndex > -1) {\n        selectedItem = items[selectedIndex + sibling];\n      }\n    }\n    return selectedItem || null;\n  }\n  /**\n   * Scrolls an element or an item in that direction into the view.\n   * @ko 엘리먼트나 해당 방향에 있는 아이템을 뷰안으로 스크롤을 한다.\n   * @see {@link /docs/examples/Methods target's example} page for detailed information\n   * @param - direction of the element. \"start\" and \"end\" find inside. \"prev\" and \"next\" find outside. <ko>엘리먼트의 방향. \"start\", \"end\"는 안쪽으로 찾는다. \"prev\", \"next\"는 바깥쪽으로 찾는다.</ko>\n   * @param - Options for the `scrollIntoView` method. <ko>`scrollIntoView` 메서드의 옵션</ko>\n   * @example\n   * <p align=\"center\">\n   *  <img src=\"https://naver.github.io/egjs-conveyer/img/scrollIntoView1.png\" height=\"200\" />\n   * </p>\n   * <p align=\"center\">\n   *   <img src=\"https://naver.github.io/egjs-conveyer/img/scrollIntoView2.png\" height=\"210\" />\n   * </p>\n   */\n  public scrollIntoView(target: HTMLElement | \"start\" | \"end\" | \"prev\" | \"next\", options: ScrollIntoViewOptions = {}) {\n    let item = this.findItem(target, options);\n\n    if (!item) {\n      return;\n    }\n    const duration = options.duration || 0;\n    let nextScrollPos = this._getNextScrollPos(item, options);\n\n    if (isString(target) && options.excludeStand && nextScrollPos === this._pos) {\n      const selectedIndex = this._items.indexOf(item);\n\n      if (selectedIndex === -1) {\n        return;\n      }\n      const sibling = target === \"start\" || target === \"prev\" ? -1 : 1;\n      item = this._items[selectedIndex + sibling];\n\n      if (!item) {\n        return;\n      }\n      nextScrollPos = this._getNextScrollPos(item, options);\n    }\n\n    this.scrollBy(nextScrollPos - this._pos, duration);\n  }\n  /**\n   * Scrolls by the given position amount.\n   * @ko 주어진 위치 양만큼 스크롤한다.\n   * @param - Amount of position to scroll by. <ko>스크롤할 위치의 양.</ko>\n   * @param - Duration to scroll by that position. <ko>해당 위치만큼 스크롤하는 시간</ko>\n   */\n  public scrollBy(pos: number, duration = 0) {\n    this._axes!.setBy({ scroll: -pos }, duration);\n  }\n  /**\n   * Scroll to the given position.\n   * @ko 주어진 위치로 스크롤한다.\n   * @param - Amount of position to scroll to. <ko>스크롤할 위치의 양.</ko>\n   * @param - Duration to scroll to that position. <ko>해당 위치로 스크롤하는 시간</ko>\n   */\n  public scrollTo(pos: number, duration = 0) {\n    this._axes!.setBy({ scroll: this._pos - pos }, duration);\n  }\n  /**\n   * Set the items directly to the Conveyer.\n   * @ko Conveyer에 아이템들을 직접 설정한다.\n   * @param - Items to set on Conveyer <ko>Conveyer에 설정할 아이템들</ko>\n   */\n  public setItems(items: ConveyerItem[]) {\n    this._items = items;\n  }\n  /**\n   * Update the position and size information of items.\n   * @ko 아이템들의 포지션, 사이즈 정보를 업데이트 한다.\n   */\n  public updateItems() {\n    const scrollAreaElement = this._scrollAreaElement;\n    const itemSelector = this._options.itemSelector;\n    const itemElements = [].slice.call(\n      itemSelector ? scrollAreaElement.querySelectorAll(itemSelector) : scrollAreaElement.children,\n    );\n    this.setItems(itemElements.map((el) => this._getItem(el)));\n  }\n  /**\n   * Update container size and scroll size.\n   * @ko 컨테이너의 크기, 스크롤 사이즈를 업데이트 한다.\n   */\n  public updateContainer() {\n    const scrollAreaElement = this._scrollAreaElement;\n    const horizontal = this._options.horizontal;\n\n    const size = horizontal ? scrollAreaElement.clientWidth : scrollAreaElement.clientHeight;\n    let scrollSize = horizontal ? scrollAreaElement.scrollWidth : scrollAreaElement.scrollHeight;\n\n    // check decimal point\n    if (IS_IE && scrollSize === size + 1) {\n      const style = getComputedStyle(scrollAreaElement);\n      const boxSizing = style.boxSizing;\n      const borderSize = horizontal\n        ? (parseFloat(style.borderLeftWidth) || 0) + (parseFloat(style.borderRightWidth) || 0)\n        : (parseFloat(style.borderTopWidth) || 0) + (parseFloat(style.borderBottomWidth) || 0);\n      const cssSize = parseFloat(horizontal ? style.width : style.height) || 0;\n      const contentSize = cssSize - (boxSizing === \"border-box\" ? borderSize : 0);\n\n      // 0 < 0.5 && 0.5 < 1\n      if (size < contentSize && contentSize < size + 1) {\n        scrollSize = size;\n      }\n    }\n    this._size = size;\n    this._scrollSize = scrollSize;\n    this._refreshScroll();\n    this._onScroll();\n  }\n  /**\n   * Updating containers and items.\n   * @ko 컨테이너와 아이템들을 업데이트 한다.\n   * @method\n   */\n  public update = () => {\n    this.updateItems();\n    this.updateContainer();\n  }\n  /**\n   * If you use the autoInit option as false, you can initialize it directly through the init method.\n   * @ko autoInit 옵션을 false로 사용하는 경우 직접 init 메서드를 통해 초기화 할 수 있다.\n   */\n  public init() {\n    if (this._axes) {\n      return;\n    }\n\n    const scrollArea = this._scrollArea;\n    let el!: HTMLElement;\n\n    if (isString(scrollArea)) {\n      el = document.querySelector<HTMLElement>(scrollArea)!;\n    } else if (instanceOfElement(scrollArea)) {\n      el = scrollArea;\n    } else if (\"value\" in scrollArea || \"current\" in scrollArea) {\n      el = scrollArea.value! || scrollArea.current!;\n    }\n\n    if (!el) {\n      return;\n    }\n\n    this._scrollAreaElement = el;\n    let isDrag = false;\n    const scrollAreaElement = this._scrollAreaElement;\n    const options = this._options;\n    const axes = new Axes({\n      scroll: {\n        range: [-Infinity, Infinity],\n      },\n    }, {\n      deceleration: 0.005,\n      round: 1,\n      nested: options.nested,\n    }, {\n      scroll: 0,\n    });\n    let isHold = false;\n\n    axes.on({\n      \"hold\": e => {\n        isHold = true;\n        isDrag = false;\n        const nativeEvent = this._getNativeEvent(e);\n\n        if (!nativeEvent) {\n          return;\n        }\n        if (options.preventDefault) {\n          nativeEvent.preventDefault();\n        }\n      },\n      \"change\": e => {\n        const nativeEvent = this._getNativeEvent(e);\n        if (options.useSideWheel && this._isMixedWheel(nativeEvent)) {\n          return;\n        }\n        this._isWheelScroll = !!nativeEvent && nativeEvent.type === \"wheel\";\n        this._isDragScroll = !!nativeEvent && !this._isWheelScroll;\n        this._isAnimationScroll = !this._isWheelScroll && !isHold;\n        isDrag = true;\n        const scroll = e.delta.scroll;\n\n        if (options.horizontal) {\n          scrollAreaElement.scrollLeft -= scroll;\n        } else {\n          scrollAreaElement.scrollTop -= scroll;\n        }\n        if (options.nested) {\n          this._checkNestedMove(nativeEvent);\n        }\n      },\n      \"release\": e => {\n        if (!isDrag) {\n          e.setTo({ ...e.depaPos }, 0);\n        }\n        isHold = false;\n        isDrag = false;\n      },\n    });\n\n    this._axes = axes;\n    if (options.useDrag) {\n      axes.connect(options.horizontal ? [\"scroll\", \"\"] : [\"\", \"scroll\"], new PanInput(scrollAreaElement, {\n        preventClickOnDrag: options.preventClickOnDrag,\n        preventDefaultOnDrag: options.preventDefaultOnDrag,\n        inputType: [\"mouse\"],\n        touchAction: \"auto\",\n      }));\n    }\n    if (options.useSideWheel) {\n      axes.connect(options.horizontal ? [\"scroll\", \"\"] : [\"\", \"scroll\"], new WheelInput(scrollAreaElement, {\n        useNormalized: false,\n      }));\n    }\n    scrollAreaElement.addEventListener(\"scroll\", this._onScroll);\n    window.addEventListener(\"resize\", this.update);\n\n    this.update();\n  }\n  /**\n   * Releases the instnace and events.\n   * @ko 인스턴스와 이벤트를 해제한다.\n   */\n  public destroy() {\n    this._axes?.destroy();\n    this.unsubscribe();\n    this._scrollAreaElement?.removeEventListener(\"scroll\", this._onScroll);\n\n    if (typeof window !== \"undefined\") {\n      window.removeEventListener(\"resize\", this.update);\n    }\n    this.off();\n    this._axes = null;\n  }\n  private _refreshScroll() {\n    const horizontal = this._options.horizontal;\n    const scrollAreaElement = this._scrollAreaElement;\n\n    this._pos = Math.min(\n      this._scrollSize - this._size,\n      horizontal ? scrollAreaElement.scrollLeft : scrollAreaElement.scrollTop,\n    );\n  }\n  private _getItem(element: HTMLElement): ConveyerItem {\n    const horizontal = this._options.horizontal;\n\n    return {\n      element,\n      pos: horizontal ? element.offsetLeft : element.offsetTop,\n      size: horizontal ? element.offsetWidth : element.offsetHeight,\n    };\n  }\n  private _getNativeEvent(e: OnHold | OnChange) {\n    return e?.inputEvent?.srcEvent ? e.inputEvent?.srcEvent : e?.inputEvent;\n  }\n  private _getNextScrollPos(item: ConveyerItem, options: ScrollIntoViewOptions) {\n    const size = this._size;\n    const scrollSize = this._scrollSize;\n    const align = options.align || \"start\";\n    const padding = options.offset || 0;\n    const itemPos = item!.pos;\n    const itemSize = item!.size;\n    let scrollPos = 0;\n\n    if (align === \"start\") {\n      scrollPos = itemPos - padding;\n    } else if (align === \"end\") {\n      scrollPos = itemPos + itemSize - size + padding;\n    } else if (align === \"center\") {\n      scrollPos = itemPos + itemSize / 2 - size / 2 + padding;\n    }\n    scrollPos = Math.max(0, Math.min(scrollPos, scrollSize - size));\n    return scrollPos;\n  }\n  private _isMixedWheel(nativeEvent: any) {\n    return !!nativeEvent && nativeEvent?.type === \"wheel\" && nativeEvent?.deltaX && nativeEvent?.deltaY;\n  }\n  private _checkNestedMove(nativeEvent: any) {\n    if (this.isReachStart || this.isReachEnd) {\n      nativeEvent.__childrenAxesAlreadyChanged = false;\n    }\n  }\n  private _onScroll = (e?: any) => {\n    if (e) {\n      this._debounceScroll();\n    }\n    this._refreshScroll();\n\n    const size = this._size;\n    const scrollSize = this._scrollSize;\n    const pos = this._pos;\n    const boundaryMargin = this._options.boundaryMargin ?? 0;\n\n    // enter start\n    if (pos <= boundaryMargin && this.isReachStart !== true) {\n      this._isReachStart = true;\n      /**\n       * This event is fired when scroll reach start.\n       * @ko 스크롤이 앞에 닿으면 발생하는 이벤트이다.\n       * @event Conveyer#reachStart\n       */\n      this.trigger(\"reachStart\");\n    } else if (pos > boundaryMargin && this.isReachStart !== false) {\n      this._isReachStart = false;\n      /**\n       * This event is fired when scroll leave start.\n       * @ko 스크롤이 앞에서 떠나면 발생하는 이벤트이다.\n       * @event Conveyer#leaveStart\n       */\n      this.trigger(\"leaveStart\");\n    }\n    // enter end\n    if (scrollSize - size - pos < 1 + boundaryMargin && this.isReachEnd !== true) {\n      this._isReachEnd = true;\n      /**\n       * This event is fired when scroll reach end.\n       * @ko 스크롤이 끝에 닿으면 발생하는 이벤트이다.\n       * @event Conveyer#reachEnd\n       */\n      this.trigger(\"reachEnd\");\n    } else if (!(scrollSize - size - pos < 1 + boundaryMargin) && this.isReachEnd !== false) {\n      this._isReachEnd = false;\n      /**\n       * This event is fired when scroll leave end.\n       * @ko 스크롤이 끝에서 떠나면 발생하는 이벤트이다.\n       * @event Conveyer#leaveEnd\n       */\n      this.trigger(\"leaveEnd\");\n    }\n  }\n  private _debounceScroll() {\n    if (!this._scrollTimer) {\n      /**\n       * This event is fired when begin scroll.\n       * @ko 스크롤이 시작하면 발생하는 이벤트이다.\n       * @event Conveyer#beginScroll\n       */\n      this.trigger(\"beginScroll\");\n    }\n    window.clearTimeout(this._scrollTimer);\n    this._scrollTimer = window.setTimeout(() => {\n      const isWheelScroll = this._isWheelScroll;\n      const isDragScroll = this._isDragScroll;\n      const isAnimationScroll = this._isAnimationScroll;\n      this._scrollTimer = 0;\n      /**\n       * This event is fired when finish scroll.\n       * @ko 스크롤이 끝나면 발생하는 이벤트이다.\n       * @event Conveyer#finishScroll\n       * @param {OnFinishScroll} e - The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n       */\n      this.trigger(\"finishScroll\", {\n        isWheelScroll,\n        isDragScroll,\n        isAnimationScroll,\n        isTrusted: isWheelScroll || isDragScroll || !isAnimationScroll,\n      });\n\n      this._isWheelScroll = false;\n      this._isDragScroll = false;\n      this._isAnimationScroll = false;\n    }, this._options.scrollDebounce);\n  }\n}\n\n\ninterface Conveyer extends ConveyerReactiveState, ReactiveSubscribe<ConveyerReactiveState> { }\n\nexport default Conveyer;\n","/**\n * egjs-conveyer\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nexport const CONVEYER_METHODS = [\n  \"update\",\n  \"findElement\",\n  \"findItem\",\n  \"scrollBy\",\n  \"scrollTo\",\n  \"scrollIntoView\",\n  \"setItems\",\n  \"updateContainer\",\n  \"updateItems\",\n  \"init\",\n] as const;\n\nexport const CONVEYER_EVENTS = [\n  \"reachStart\",\n  \"reachEnd\",\n  \"leaveStart\",\n  \"leaveEnd\",\n  \"beginScroll\",\n  \"finishScroll\",\n] as const;\n\n","/**\n * egjs-conveyer\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nimport Conveyer from \"./Conveyer\";\nimport { CONVEYER_EVENTS, CONVEYER_METHODS } from \"./consts\";\nimport { ReactiveAdapter, Ref } from \"@cfcs/core\";\nimport { ConveyerEvents, ConveyerMethods, ConveyerOptions, ConveyerReactiveState } from \"./types\";\n\n\nexport interface ConveyerData {\n  container: Ref<HTMLElement>;\n  props: ConveyerOptions;\n}\n\nexport const REACTIVE_CONVEYER: ReactiveAdapter<\n  Conveyer,\n  ConveyerReactiveState,\n  keyof ConveyerMethods,\n  ConveyerData,\n  ConveyerEvents\n> = {\n  methods: CONVEYER_METHODS,\n  events: CONVEYER_EVENTS,\n  created(data) {\n    return new Conveyer(data.container, { ...data.props, autoInit: false });\n  },\n  init(instance, data) {\n    if (data.props.autoInit !== false) {\n      instance!.init();\n    }\n  },\n  on(instance, name, callback) {\n    instance.on(name, callback);\n  },\n  off(instance, name, callback) {\n    instance.off(name, callback);\n  },\n  destroy(instance) {\n    instance.destroy();\n  },\n};\n","/**\n * egjs-conveyer\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nimport Conveyer from \"./Conveyer\";\n\nexport default Conveyer;\n\nexport * from \"./consts\";\nexport * from \"./types\";\nexport * from \"./reactive\";\n","import Conveyer, * as modules from './index';\n\nfor (const name in modules) {\n  (Conveyer as any)[name] = (modules as any)[name];\n}\n\ndeclare const module: any;\nmodule.exports = Conveyer;\nexport default Conveyer;\nexport * from './index';\n"],"names":["IS_IE","test","window","navigator","userAgent","toLowerCase","isString","val","instanceOfElement","el","Element","Node","__extends","scrollArea","options","_super","_this","updateItems","updateContainer","e","_debounceScroll","_refreshScroll","size","_size","scrollSize","_scrollSize","pos","_pos","boundaryMargin","_options","isReachStart","_isReachStart","trigger","isReachEnd","_isReachEnd","horizontal","useDrag","useSideWheel","autoInit","scrollDebounce","_scrollArea","init","direction","findItem","element","target","hitTest","items","_items","length","endPos","sibling","intersection","startVirtualItem","endVirtualItem","unshift","push","selectedItem","selectedItems","filter","item","itemSize","dist","dist2","Math","abs","reverse","_getItem","selectedIndex","indexOf","duration","nextScrollPos","_getNextScrollPos","excludeStand","scrollBy","_axes","setBy","scroll","scrollAreaElement","_scrollAreaElement","itemSelector","itemElements","slice","call","querySelectorAll","children","setItems","map","clientWidth","clientHeight","scrollWidth","scrollHeight","style","getComputedStyle","boxSizing","borderSize","parseFloat","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","cssSize","width","height","contentSize","_onScroll","document","querySelector","value","current","isDrag","axes","Axes","range","Infinity","deceleration","round","nested","isHold","on","nativeEvent","_getNativeEvent","preventDefault","_isMixedWheel","_isWheelScroll","type","_isDragScroll","_isAnimationScroll","delta","scrollLeft","scrollTop","_checkNestedMove","setTo","depaPos","connect","PanInput","preventClickOnDrag","preventDefaultOnDrag","inputType","touchAction","WheelInput","useNormalized","addEventListener","update","destroy","unsubscribe","removeEventListener","off","min","offsetLeft","offsetTop","offsetWidth","offsetHeight","inputEvent","srcEvent","align","padding","offset","itemPos","scrollPos","max","deltaX","deltaY","__childrenAxesAlreadyChanged","_scrollTimer","clearTimeout","setTimeout","isWheelScroll","isDragScroll","isAnimationScroll","isTrusted","__decorate","Reactive","Conveyer","ReactiveSubscribe","Component","CONVEYER_METHODS","CONVEYER_EVENTS","REACTIVE_CONVEYER","methods","events","created","data","container","props","instance","name","callback","modules","module","exports"],"mappings":"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"}