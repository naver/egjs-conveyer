(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2845],{8206:(e,n,t)=>{"use strict";t.d(n,{C:()=>l});var i=t(2784),s=t(582),r=t(1846),o=t(6347);const l=e=>{const n=t(3224)("./"+e.folder+"/html.txt").default,l=t(3405)("./"+e.folder+"/js.txt").default,a=e.reactCode,d=t(6145)("./"+e.folder+"/vue.txt").default,c=d.replace("vue-conveyer","vue2-conveyer").replace("vue3-infinitegrid","vue-infinitegrid");const v=t(7407)("./"+e.folder+"/angularHTML.txt").default,u=t(2400)("./"+e.folder+"/angularComponent.txt").default,m=t(4676)("./"+e.folder+"/svelte.txt").default;return i.createElement(s.Z,{groupId:"cfc",defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"React",value:"react"},{label:"Vue@2",value:"vue2"},{label:"Vue@3",value:"vue"},{label:"Angular",value:"angular"},{label:"Svelte",value:"svelte"}]},i.createElement(r.Z,{value:"js"},i.createElement(o.Z,{className:"language-html"},n),i.createElement(o.Z,{className:"language-js"},l)),i.createElement(r.Z,{value:"react"},i.createElement(o.Z,{className:"language-jsx"},a)),i.createElement(r.Z,{value:"vue2"},i.createElement(o.Z,{className:"language-html"},c)),i.createElement(r.Z,{value:"vue"},i.createElement(o.Z,{className:"language-html"},d)),i.createElement(r.Z,{value:"angular"},i.createElement(o.Z,{className:"language-html"},v),u&&i.createElement(o.Z,{className:"language-ts"},u)),i.createElement(r.Z,{value:"svelte"},i.createElement(o.Z,{className:"language-html"},m)))}},2759:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var i=t(2784),s=t(3395),r=t(4477);function o(e,n){const t=[],i=e*n;for(let s=0;s<n;++s)t.push({groupKey:e,key:i+s});return t}function l(){const e=i.useRef(),n=i.useRef(),[t,l]=i.useState((()=>o(0,10))),{isReachStart:a,isReachEnd:d,setItems:c,updateContainer:v,scrollIntoView:u,init:m}=(0,s.H)(n,{horizontal:!1,autoInit:!1});return i.useEffect((()=>{n.current=e.current.getScrollContainerElement(),m()})),i.createElement("div",{className:"examples"},i.createElement("div",{className:"buttons"},i.createElement("button",{className:"prev",disabled:a,onClick:()=>{u("start",{align:"end",duration:500,excludeStand:!0})}},"Prev"),i.createElement("button",{className:"next",disabled:d,onClick:()=>{u("end",{align:"start",duration:500,excludeStand:!0})}},"Next")),i.createElement(r.L2,{className:"items infinite",container:!0,gap:5,ref:e,onRequestAppend:e=>{const n=(+e.groupKey||0)+1;l([...t,...o(n,10)])},onRenderComplete:e=>{c(e.currentTarget.getItems().map((e=>({element:e.element,pos:e.computedContentPos,size:e.contentSize})))),v()}},t.map(((e,n)=>i.createElement("div",{className:"item item"+n%4,"data-grid-groupkey":e.groupKey,key:e.key},e.key)))))}},3395:(e,n,t)=>{"use strict";t.d(n,{H:()=>y});var i=t(3032),s=t(1588),r=t(5030),o=function(e,n){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])},o(e,n)};var l,a,d=function(){return d=Object.assign||function(e){for(var n,t=1,i=arguments.length;t<i;t++)for(var s in n=arguments[t])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},d.apply(this,arguments)};function c(e,n,t,i){var s,r=arguments.length,o=r<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,n,t,i);else for(var l=e.length-1;l>=0;l--)(s=e[l])&&(o=(r<3?s(o):r>3?s(n,t,o):s(n,t))||o);return r>3&&o&&Object.defineProperty(n,t,o),o}var v=/msie|trident/g.test("undefined"!=typeof window&&(null===(a=null===(l=null===window||void 0===window?void 0:window.navigator)||void 0===l?void 0:l.userAgent)||void 0===a?void 0:a.toLowerCase())||"");function u(e){return"string"==typeof e}var m=function(e){function n(n,t){void 0===t&&(t={});var i=e.call(this)||this;return i._axes=null,i._items=[],i._size=0,i._scrollSize=0,i._scrollTimer=0,i._isWheelScroll=!1,i._isDragScroll=!1,i._isAnimationScroll=!1,i._isReachStart=!0,i._isReachEnd=!1,i._pos=0,i.update=function(){i.updateItems(),i.updateContainer()},i._onScroll=function(e){var n;e&&i._debounceScroll(),i._refreshScroll();var t=i._size,s=i._scrollSize,r=i._pos,o=null!==(n=i._options.boundaryMargin)&&void 0!==n?n:0;r<=o&&!0!==i.isReachStart?(i._isReachStart=!0,i.trigger("reachStart")):r>o&&!1!==i.isReachStart&&(i._isReachStart=!1,i.trigger("leaveStart")),s-t-r<1+o&&!0!==i.isReachEnd?(i._isReachEnd=!0,i.trigger("reachEnd")):s-t-r<1+o||!1===i.isReachEnd||(i._isReachEnd=!1,i.trigger("leaveEnd"))},i._options=d({horizontal:!0,useDrag:!0,useSideWheel:!1,autoInit:!0,boundaryMargin:0,scrollDebounce:100},t),i._scrollArea=n,i._options.autoInit&&i.init(),i}!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function t(){this.constructor=e}o(e,n),e.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)}(n,e);var t=n.prototype;return t.findElement=function(e,n){var t;return void 0===n&&(n={}),(null===(t=this.findItem(e,n))||void 0===t?void 0:t.element)||null},t.findItem=function(e,n){var t;void 0===n&&(n={});var i,s=this._pos,r=this._scrollSize,o=this._size,l=null!==(t=null==n?void 0:n.hitTest)&&void 0!==t?t:1,a=function(e,n,t){if(t||2===arguments.length)for(var i,s=0,r=n.length;s<r;s++)!i&&s in n||(i||(i=Array.prototype.slice.call(n,0,s)),i[s]=n[s]);return e.concat(i||Array.prototype.slice.call(n))}([],this._items,!0),d=a.length,c=s+o,v=n.sibling,u=n.intersection,m={pos:0,size:0},p={pos:r,size:0};if(a[0].pos>0&&a.unshift(m),d&&a[d-1].pos+a[d-1].size<r&&a.push(p),"start"===e){if(s<0)return null;i=(f=a.filter((function(e){var n=e.size,t=e.pos-s,i=t+n;return t>=0||i>0&&u||i>=0&&(!n||Math.abs(i)/n>=l)})))[0]===m&&f[1]||f[0]}else if("end"===e){if(s>r-o)return null;var f;i=(f=a.filter((function(e){var n=e.size,t=e.pos+n-c,i=t-n;return t<=0||i<0&&u||i<=0&&(!n||Math.abs(i)/n>=l)})).reverse())[0]===p&&f[1]||f[0]}else if("prev"===e)i=a.filter((function(e){var n=e.size,t=e.pos+n-s,i=t-n;return t<=0||i<0&&u||i<=0&&(!n||Math.abs(i)/n>=l)})).reverse()[0];else{if("next"!==e)return this._getItem(e);i=a.filter((function(e){var n=e.size,t=e.pos-c,i=t+n;return t>=0||i>0&&u||i>=0&&(!n||Math.abs(i)/n>=l)}))[0]}if(v&&i){var h=a.indexOf(i);h>-1&&(i=a[h+v])}return i||null},t.scrollIntoView=function(e,n){void 0===n&&(n={});var t=this.findItem(e,n);if(t){var i=n.duration||0,s=this._getNextScrollPos(t,n);if(u(e)&&n.excludeStand&&s===this._pos){var r=this._items.indexOf(t);if(-1===r)return;var o="start"===e||"prev"===e?-1:1;if(!(t=this._items[r+o]))return;s=this._getNextScrollPos(t,n)}this.scrollBy(s-this._pos,i)}},t.scrollBy=function(e,n){void 0===n&&(n=0),this._axes.setBy({scroll:-e},n)},t.scrollTo=function(e,n){void 0===n&&(n=0),this._axes.setBy({scroll:this._pos-e},n)},t.setItems=function(e){this._items=e},t.updateItems=function(){var e=this,n=this._scrollAreaElement,t=this._options.itemSelector,i=[].slice.call(t?n.querySelectorAll(t):n.children);this.setItems(i.map((function(n){return e._getItem(n)})))},t.updateContainer=function(){var e=this._scrollAreaElement,n=this._options.horizontal,t=n?e.clientWidth:e.clientHeight,i=n?e.scrollWidth:e.scrollHeight;if(v&&i===t+1){var s=getComputedStyle(e),r=s.boxSizing,o=n?(parseFloat(s.borderLeftWidth)||0)+(parseFloat(s.borderRightWidth)||0):(parseFloat(s.borderTopWidth)||0)+(parseFloat(s.borderBottomWidth)||0),l=(parseFloat(n?s.width:s.height)||0)-("border-box"===r?o:0);t<l&&l<t+1&&(i=t)}this._size=t,this._scrollSize=i,this._refreshScroll(),this._onScroll()},t.init=function(){var e=this;if(!this._axes){var n,t=this._scrollArea;if(u(t)?n=document.querySelector(t):!function(e){return e instanceof Element||e instanceof Node}(t)?("value"in t||"current"in t)&&(n=t.value||t.current):n=t,n){this._scrollAreaElement=n;var s=!1,r=this._scrollAreaElement,o=this._options,l=new i.ZP({scroll:{range:[-1/0,1/0]}},{deceleration:.005,round:1,nested:o.nested},{scroll:0}),a=!1;l.on({hold:function(n){a=!0,s=!1;var t=e._getNativeEvent(n);t&&o.preventDefault&&t.preventDefault()},change:function(n){var t=e._getNativeEvent(n);if(!o.useSideWheel||!e._isMixedWheel(t)){e._isWheelScroll=!!t&&"wheel"===t.type,e._isDragScroll=!!t&&!e._isWheelScroll,e._isAnimationScroll=!e._isWheelScroll&&!a,s=!0;var i=n.delta.scroll;o.horizontal?r.scrollLeft-=i:r.scrollTop-=i,o.nested&&e._checkNestedMove(t)}},release:function(e){s||e.setTo(d({},e.depaPos),0),a=!1,s=!1}}),this._axes=l,o.useDrag&&l.connect(o.horizontal?["scroll",""]:["","scroll"],new i.Ju(r,{preventClickOnDrag:o.preventClickOnDrag,preventDefaultOnDrag:o.preventDefaultOnDrag,inputType:["mouse"],touchAction:"auto"})),o.useSideWheel&&l.connect(o.horizontal?["scroll",""]:["","scroll"],new i.HA(r,{useNormalized:!1})),r.addEventListener("scroll",this._onScroll),window.addEventListener("resize",this.update),this.update()}}},t.destroy=function(){var e,n;null===(e=this._axes)||void 0===e||e.destroy(),this.unsubscribe(),null===(n=this._scrollAreaElement)||void 0===n||n.removeEventListener("scroll",this._onScroll),"undefined"!=typeof window&&window.removeEventListener("resize",this.update),this.off(),this._axes=null},t._refreshScroll=function(){var e=this._options.horizontal,n=this._scrollAreaElement;this._pos=Math.min(this._scrollSize-this._size,e?n.scrollLeft:n.scrollTop)},t._getItem=function(e){var n=this._options.horizontal;return{element:e,pos:n?e.offsetLeft:e.offsetTop,size:n?e.offsetWidth:e.offsetHeight}},t._getNativeEvent=function(e){var n,t;return(null===(n=null==e?void 0:e.inputEvent)||void 0===n?void 0:n.srcEvent)?null===(t=e.inputEvent)||void 0===t?void 0:t.srcEvent:null==e?void 0:e.inputEvent},t._getNextScrollPos=function(e,n){var t=this._size,i=this._scrollSize,s=n.align||"start",r=n.offset||0,o=e.pos,l=e.size,a=0;return"start"===s?a=o-r:"end"===s?a=o+l-t+r:"center"===s&&(a=o+l/2-t/2+r),a=Math.max(0,Math.min(a,i-t))},t._isMixedWheel=function(e){return!!e&&"wheel"===(null==e?void 0:e.type)&&(null==e?void 0:e.deltaX)&&(null==e?void 0:e.deltaY)},t._checkNestedMove=function(e){(this.isReachStart||this.isReachEnd)&&(e.__childrenAxesAlreadyChanged=!1)},t._debounceScroll=function(){var e=this;this._scrollTimer||this.trigger("beginScroll"),window.clearTimeout(this._scrollTimer),this._scrollTimer=window.setTimeout((function(){var n=e._isWheelScroll,t=e._isDragScroll,i=e._isAnimationScroll;e._scrollTimer=0,e.trigger("finishScroll",{isWheelScroll:n,isDragScroll:t,isAnimationScroll:i,isTrusted:n||t||!i}),e._isWheelScroll=!1,e._isDragScroll=!1,e._isAnimationScroll=!1}),this._options.scrollDebounce)},c([(0,r.Bn)("isReachStart")],n.prototype,"_isReachStart",void 0),c([(0,r.Bn)("isReachEnd")],n.prototype,"_isReachEnd",void 0),c([(0,r.Bn)("scrollPos")],n.prototype,"_pos",void 0),n=c([r.kU],n)}(s.Z),p={methods:["update","findElement","findItem","scrollBy","scrollTo","scrollIntoView","setItems","updateContainer","updateItems","init"],events:["reachStart","reachEnd","leaveStart","leaveEnd","beginScroll","finishScroll"],created:function(e){return new m(e.container,d(d({},e.props),{autoInit:!1}))},init:function(e,n){!1!==n.props.autoInit&&e.init()},on:function(e,n,t){e.on(n,t)},off:function(e,n,t){e.off(n,t)},destroy:function(e){e.destroy()}};var f=t(3566),h=function(){return h=Object.assign||function(e){for(var n,t=1,i=arguments.length;t<i;t++)for(var s in n=arguments[t])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},h.apply(this,arguments)};function y(e,n){return void 0===n&&(n={}),(0,f.q)(h({data:function(){return{container:e,props:n}}},p))}},6183:(e,n,t)=>{"use strict";t.r(n),t.d(n,{contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var i=t(7896),s=(t(2784),t(876)),r=t(8206),o=t(2759);const l={title:"Infinite Scroll",custom_edit_url:null},a=void 0,d={unversionedId:"examples/InfiniteScroll",id:"version-1.0.2/examples/InfiniteScroll",title:"Infinite Scroll",description:"Infinite Scroll with Conveyer.",source:"@site/versioned_docs/version-1.0.2/examples/InfiniteScroll.mdx",sourceDirName:"examples",slug:"/examples/InfiniteScroll",permalink:"/egjs-conveyer/ko/docs/1.0.2/examples/InfiniteScroll",editUrl:null,tags:[],version:"1.0.2",frontMatter:{title:"Infinite Scroll",custom_edit_url:null},sidebar:"examples",previous:{title:"Use Methods",permalink:"/egjs-conveyer/ko/docs/1.0.2/examples/Methods"}},c=[],v={toc:c};function u(e){let{components:n,...l}=e;return(0,s.kt)("wrapper",(0,i.Z)({},v,l,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Infinite Scroll with Conveyer.",(0,s.kt)("br",{parentName:"p"}),"\n","The conveyer can be used in combination with other components."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"The InfiniteScroll module uses ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/naver/egjs-infinitegrid"},"InfiniteGrid"),"."),(0,s.kt)("li",{parentName:"ul"},"If it is combined with other components, it is difficult to get a ref. You can initialize it by setting ",(0,s.kt)("a",{parentName:"li",href:"/docs/api/ConveyerOptions"},"autoInit")," to false and setting the ref directly.")),(0,s.kt)(o.Z,{mdxType:"InfiniteScroll"}),(0,s.kt)(r.C,{folder:"InfiniteScroll",reactCode:t(4906).Z,mdxType:"ConveyerCodeTabs"}))}u.isMDXComponent=!0},5031:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i=""},3169:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<div class="examples">\n  <div class="items horizontal" ngxConveyer>\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n'},5652:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<div class="examples">\n  <div class="items horizontal">\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n'},3635:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='import Conveyer from "@egjs/conveyer";\n\nconst conveyer = new Conveyer(".items");\n'},1739:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<script>\n  import { useConveyer } from "@egjs/svelte-conveyer";\n\n  const {\n    ref,\n  } = useConveyer();\n<\/script>\n<div class="examples">\n  <div class="items horizontal" use:ref>\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n'},9485:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<template>\n<div class="examples">\n  <div class="items horizontal" ref="ref">\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n</template>\n<script lang="ts">\nimport { useConveyer } from "@egjs/vue-conveyer";\n\nexport default {\n  setup() {\n    const { ref } = useConveyer();\n\n    return {\n      ref,\n    };\n  },\n};\n<\/script>\n'},8332:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i="import { Component, ViewChild } from '@angular/core';\nimport { NgxInfiniteGridComponent } from '@egjs/ngx-infinitegrid';\nimport { OnRequestAppend, OnRenderComplete } from '@egjs/infinitegrid';\nimport { NgxConveyerDirective } from '@egjs/ngx-conveyer';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [\n    \"./app.component.css\",\n  ],\n})\nexport class AppComponent {\n  @ViewChild('ig', { static: false }) ig!: NgxInfiniteGridComponent;\n  @ViewChild('conveyer', { static: false }) conveyer!: NgxConveyerDirective;\n  items = this.getItems(0, 10);\n  getItems(nextGroupKey: number, count: number) {\n    const nextItems = [];\n    const nextKey = nextGroupKey * count;\n\n    for (let i = i; i < count; ++i) {\n      nextItems.push({ groupKey: nextGroupKey, key: nextKey + i });\n    }\n    return nextItems;\n  }\n  groupBy(_: any, item: any) {\n    return item.groupKey;\n  }\n  trackBy(_: any, item: any) {\n    return item.key;\n  }\n  onRequestAppend(e: OnRequestAppend) {\n    const nextGroupKey = (+e.groupKey! || 0) + 1;\n\n    this.items = [\n      ...this.items,\n      ...this.getItems(nextGroupKey, 10),\n    ];\n  }\n  onRenderComplete(e: OnRenderComplete) {\n    this.conveyer.setItems(e.currentTarget.getItems().map((item) => ({\n      element: item.element,\n      pos: item.computedContentPos,\n      size: item.contentSize,\n    })));\n    this.conveyer.updateContainer();\n  }\n  prev() {\n    this.conveyer.scrollIntoView(\"start\", {\n      align: \"end\",\n      duration: 500,\n      excludeStand: true,\n    });\n  }\n  next() {\n    this.conveyer.scrollIntoView(\"end\", {\n      align: \"start\",\n      duration: 500,\n      excludeStand: true,\n    });\n  }\n}\n"},4718:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<div class="examples">\n  <div class="buttons">\n    <button class="prev" [disabled]="conveyer?.isReachStart" (click)="prev()">\n      prev\n    </button>\n    <button class="next" [disabled]="conveyer?.isReachEnd" (click)="next()">\n      next\n    </button>\n  </div>\n  <div\n    NgxMasonryInfiniteGrid\n    class="items"\n    [gap]="5"\n    [align]="\'justify\'"\n    [items]="items"\n    [trackBy]="trackBy"\n    [groupBy]="groupBy"\n    (requestAppend)="onRequestAppend($event)"\n    (renderComplete)="onRenderComplete($event)"\n    [horizontal]="false"\n    [container]="true"\n    [ngxConveyer]="{ horizontal: false }"\n    #conveyer="ngxConveyer"\n    #ig\n  >\n    <div class="item" *ngFor="let item of ig.visibleItems; trackBy: trackBy;">\n      {{item.key}}\n    </div>\n  </div>\n</div>\n'},1615:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<div class="examples">\n  <div class="buttons">\n    <button class="prev">prev</button>\n    <button class="next">next</button>\n  </div>\n  <div class="items"></div>\n</div>\n'},5657:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='import { MasonryInfiniteGrid } from "@egjs/infinitegrid";\nimport Conveyer from "@egjs/conveyer";\n\nconst grid = new MasonryInfiniteGrid(".items", {\n  container: true,\n  gap: 5,\n  autoInit: false,\n});\n\ngrid.on("renderComplete", () => {\n  // conveyer.updateItems();\n  conveyer.setItems(grid.getItems().map((item) => ({\n    element: item.element,\n    pos: item.cssContentPos || item.contentPos,\n    size: item.contentSize,\n  })));\n  conveyer.updateContainer();\n});\nlet i = 0;\ngrid.on("requestAppend", () => {\n  ++i;\n  grid.append(`<div class="item">${i}</div>`)\n});\n\nconst conveyer = new Conveyer(".items", {\n  preventClickOnDrag: true,\n  horizontal: false,\n  itemSelector: ".item",\n});\n\nconst prev = document.querySelector(".prev");\nconst next = document.querySelector(".next");\n\n// subscribe reactive properties\nconveyer.subscribe("isReachStart", (isReachStart) => {\n  prev.disabled = isReachStart;\n});\n\nconveyer.subscribe("isReachEnd", (isReachEnd) => {\n  next.disabled = isReachEnd;\n});\n\n// scrollIntoView\nprev.addEventListener("click", () => {\n  // start to end\n  conveyer.scrollIntoView("start", {\n    align: "end",\n    duration: 500,\n    excludeStand: true,\n  });\n});\nnext.addEventListener("click", () => {\n  // end to start\n  conveyer.scrollIntoView("end", {\n    align: "start",\n    duration: 500,\n    excludeStand: true,\n  });\n});\n\ngrid.renderItems();\nconveyer.init();\n'},1565:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<script>\n  import { MasonryInfiniteGrid } from "@egjs/svelte-infinitegrid";\n  import { useConveyer } from "@egjs/svelte-conveyer";\n  import { onMount } from "svelte";\n\n  let ig;\n  let items = getItems(0, 10);\n\n  function getItems(nextGroupKey, count) {\n    const nextItems = [];\n\n    for (let i = i; i < count; ++i) {\n      const nextKey = nextGroupKey * count + i;\n\n      nextItems.push({ groupKey: nextGroupKey, key: nextKey });\n    }\n    return nextItems;\n  }\n  const {\n    isReachStart,\n    isReachEnd,\n    setItems,\n    updateContainer,\n    scrollIntoView,\n    ref,\n    init,\n  } = useConveyer({\n    horizontal: false,\n    autoInit: false,\n  });\n  onMount(() => {\n    ref.current = ig.getScrollContainerElement();\n    init();\n  })\n<\/script>\n<div class="examples">\n  <div className="buttons">\n    <button className="prev" disabled={$isReachStart} on:click={() => {\n      // start to end\n      scrollIntoView("start", {\n        align: "end",\n        duration: 500,\n        excludeStand: true,\n      });\n    }}>Prev</button>\n    <button className="next" disabled={$isReachEnd} on:click={() => {\n      // end to start\n      scrollIntoView("end", {\n        align: "start",\n        duration: 500,\n        excludeStand: true,\n      });\n    }}>Next</button>\n  </div>\n  <MasonryInfiniteGrid\n    class="items"\n    gap={5}\n    {items}\n    on:requestAppend={({ detail: e }) => {\n      const nextGroupKey = (+e.groupKey || 0) + 1;\n\n      items = [...items, ...getItems(nextGroupKey, 10)];\n    }}\n    on:renderComplete={({ detail: e }) => {\n      setItems(e.currentTarget.getItems().map((item) => ({\n        element: item.element,\n        pos: item.computedContentPos,\n        size: item.contentSize,\n      })));\n      updateContainer();\n    }}\n    bind:this={ig}\n    let:visibleItems\n  >\n    {#each visibleItems as item (item.key)}\n      <div class="item">${item.key}</div>\n    {/each}\n  </MasonryInfiniteGrid>\n</div>\n'},8668:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<template>\n<div class="examples">\n  <div class="buttons">\n    <button class="prev" :disabled="isReachStart" @click="prev">prev</button>\n    <button class="next" :disabled="isReachEnd" @click="next">next</button>\n  </div>\n  <masonry-infinite-grid\n    class="items"\n    v-bind:gap="5"\n    ref="ig"\n    v-on:request-append="onRequestAppend"\n  >\n    <div\n      class="item"\n      v-for="item in items"\n      :key="item.key"\n      :data-grid-groupkey="item.groupKey"\n    >{item.key}</div>\n  </masonry-infinite-grid>\n</div>\n</template>\n<script lang="ts">\nimport { MasonryInfiniteGrid } from "@egjs/vue3-infinitegrid";\nimport { useConveyer } from "@egjs/vue-conveyer";\n\nexport default {\n  components: {\n    MasonryInfiniteGrid,\n  },\n  setup() {\n    const { ref, scrollIntoView, isReachStart, isReachEnd, updateContainersetItems, init } = useConveyer({\n      horizontal: false,\n    });\n\n    return {\n      ref,\n      scrollIntoView,\n      isReachStart,\n      isReachEnd,\n      updateContainer,\n      setItems,\n      init,\n    };\n  },\n  data() {\n    return {\n      items: this.getItems(0, 10),\n    };\n  },\n  mounted() {\n    this.ref.value = this.ig.getScrollContainerElement();\n    this.init();\n  }\n  methods: {\n    getItems(nextGroupKey: nextGroupKey, count: number) {\n      const nextItems: any[] = [];\n\n      for (let i = 0; i < count; ++i) {\n        const nextKey = nextGroupKey * count + i;\n\n        nextItems.push({ groupKey: groupKey, key: nextKey });\n      }\n      return nextItems;\n    },\n    onRequestAppend(e) {\n      const nextGroupKey = (+e.groupKey! || 0) + 1;\n\n      this.items = [...this.items, ...this.getItems(nextGroupKey, 10)];\n    },\n    onRenderComplete(e) {\n      this.setItems(e.currentTarget.getItems().map((item) => ({\n        element: item.element,\n        pos: item.computedContentPos,\n        size: item.contentSize,\n      })));\n      this.updateContainer();\n    },\n    prev() {\n      this.scrollIntoView("start", {\n        align: "end",\n        duration: 500,\n        excludeStand: true,\n      });\n    },\n    next() {\n      this.scrollIntoView("end", {\n        align: "start",\n        duration: 500,\n        excludeStand: true,\n      });\n    },\n  },\n};\n<\/script>\n'},2459:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i="import { Component, Input } from '@angular/core';\nimport { NgxConveyerDirective } from 'ngx-conveyer';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [\n    \"./app.component.css\",\n  ],\n})\nexport class AppComponent {\n  @ViewChild('conveyer', { static: false }) conveyer!: NgxConveyerDirective;\n  prev() {\n    this.conveyer.scrollIntoView(\"start\", {\n      align: \"end\",\n      duration: 500,\n      intersection: true,\n    });\n  }\n  next() {\n    this.conveyer.scrollIntoView(\"end\", {\n      align: \"start\",\n      duration: 500,\n      intersection: true,\n    });\n  }\n}\n"},8228:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<div class="examples">\n  <div class="buttons">\n    <button class="prev" (click)="prev()">prev</button>\n    <button class="next" (click)="next()">next</button>\n  </div>\n  <div class="items horizontal" ngxConveyer #conveyer="ngxConveyer">\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n'},5472:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<div class="examples">\n  <div class="buttons">\n    <button class="prev">prev</button>\n    <button class="next">next</button>\n  </div>\n  <div class="items horizontal">\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n'},2275:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='import Conveyer from "@egjs/conveyer";\n\nconst conveyer = new Conveyer(".items", {\n  horizontal: false,\n});\n\nconst prev = document.querySelector(".prev");\nconst next = document.querySelector(".next");\n\n// scrollIntoView\nprev.addEventListener("click", () => {\n  // start to end\n  conveyer.scrollIntoView("start", {\n    align: "end",\n    duration: 500,\n    intersection: true,\n  });\n});\nnext.addEventListener("click", () => {\n  // end to start\n  conveyer.scrollIntoView("end", {\n    align: "start",\n    duration: 500,\n    intersection: true,\n  });\n});\n'},4781:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<script>\n  import { useConveyer } from "@egjs/svelte-conveyer";\n\n  const {\n    scrollIntoView,\n    ref,\n  } = useConveyer({\n    horizontal: false,\n    autoInit: false,\n  });\n<\/script>\n<div class="examples">\n  <div className="buttons">\n    <button className="prev" disabled={$isReachStart} on:click={() => {\n      // start to end\n      scrollIntoView("start", {\n        align: "end",\n        duration: 500,\n        intersection: true,\n      });\n    }}>Prev</button>\n    <button className="next" disabled={$isReachEnd} on:click={() => {\n      // end to start\n      scrollIntoView("end", {\n        align: "start",\n        duration: 500,\n        intersection: true,\n      });\n    }}>Next</button>\n  </div>\n  <div class="items horizontal" use:ref>\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n'},1989:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<template>\n<div class="examples">\n  <div class="buttons">\n    <button class="prev" :disabled="isReachStart" @click="prev">prev</button>\n    <button class="next" :disabled="isReachEnd" @click="next">next</button>\n  </div>\n  <div class="items horizontal" ref="ref">\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n</template>\n<script lang="ts">\nimport { MasonryInfiniteGrid } from "@egjs/vue3-infinitegrid";\nimport { useConveyer } from "@egjs/vue-conveyer";\n\nexport default {\n  components: {\n    MasonryInfiniteGrid,\n  },\n  setup() {\n    const { ref, scrollIntoView } = useConveyer({\n      horizontal: false,\n    });\n\n    return {\n      ref,\n      scrollIntoView,\n    };\n  },\n  methods: {\n    prev() {\n      this.scrollIntoView("start", {\n        align: "end",\n        duration: 500,\n        intersection: true,\n      });\n    },\n    next() {\n      this.scrollIntoView("end", {\n        align: "start",\n        duration: 500,\n        intersection: true,\n      });\n    },\n  },\n};\n<\/script>\n'},8155:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i="import { Component, Input } from '@angular/core';\nimport { NgxConveyerDirective } from 'ngx-conveyer';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [\n    \"./app.component.css\",\n  ],\n})\nexport class AppComponent {\n  @ViewChild('conveyer', { static: false }) conveyer!: NgxConveyerDirective;\n  prev() {\n    this.conveyer.scrollIntoView(\"start\", {\n      align: \"end\",\n      duration: 500,\n      excludeStand: true,\n    });\n  }\n  next() {\n    this.conveyer.scrollIntoView(\"end\", {\n      align: \"start\",\n      duration: 500,\n      excludeStand: true,\n    });\n  }\n}\n"},5421:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<div class="examples">\n  <div class="buttons">\n    <button class="prev" (click)="prev()">prev</button>\n    <button class="next" (click)="next()">next</button>\n  </div>\n  <div class="items horizontal" ngxConveyer #conveyer="ngxConveyer">\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n'},6751:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<div class="examples">\n  <div class="buttons">\n    <button class="prev">prev</button>\n    <button class="next">next</button>\n  </div>\n  <div class="items horizontal">\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n'},5629:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='import Conveyer from "@egjs/conveyer";\n\nconst conveyer = new Conveyer(".items", {\n  horizontal: false,\n});\n\nconst prev = document.querySelector(".prev");\nconst next = document.querySelector(".next");\n\n// scrollIntoView\nprev.addEventListener("click", () => {\n  // start to end\n  conveyer.scrollIntoView("start", {\n    align: "end",\n    duration: 500,\n    excludeStand: true,\n  });\n});\nnext.addEventListener("click", () => {\n  // end to start\n  conveyer.scrollIntoView("end", {\n    align: "start",\n    duration: 500,\n    excludeStand: true,\n  });\n});\n'},9159:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<script>\n  import { useConveyer } from "@egjs/svelte-conveyer";\n\n  const {\n    scrollIntoView,\n    ref,\n  } = useConveyer({\n    horizontal: false,\n    autoInit: false,\n  });\n<\/script>\n<div class="examples">\n  <div className="buttons">\n    <button className="prev" disabled={$isReachStart} on:click={() => {\n      // start to end\n      scrollIntoView("start", {\n        align: "end",\n        duration: 500,\n        excludeStand: true,\n      });\n    }}>Prev</button>\n    <button className="next" disabled={$isReachEnd} on:click={() => {\n      // end to start\n      scrollIntoView("end", {\n        align: "start",\n        duration: 500,\n        excludeStand: true,\n      });\n    }}>Next</button>\n  </div>\n  <div class="items horizontal" use:ref>\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n'},2890:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<template>\n<div class="examples">\n  <div class="buttons">\n    <button class="prev" :disabled="isReachStart" @click="prev">prev</button>\n    <button class="next" :disabled="isReachEnd" @click="next">next</button>\n  </div>\n  <div class="items horizontal" ref="ref">\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n</template>\n<script lang="ts">\nimport { MasonryInfiniteGrid } from "@egjs/vue3-infinitegrid";\nimport { useConveyer } from "@egjs/vue-conveyer";\n\nexport default {\n  components: {\n    MasonryInfiniteGrid,\n  },\n  setup() {\n    const { ref, scrollIntoView } = useConveyer({\n      horizontal: false,\n    });\n\n    return {\n      ref,\n      scrollIntoView,\n    };\n  },\n  methods: {\n    prev() {\n      this.scrollIntoView("start", {\n        align: "end",\n        duration: 500,\n        excludeStand: true,\n      });\n    },\n    next() {\n      this.scrollIntoView("end", {\n        align: "start",\n        duration: 500,\n        excludeStand: true,\n      });\n    },\n  },\n};\n<\/script>\n'},8197:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i=""},4002:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<div class="examples">\n  <div class="buttons">\n    <button class="prev" [disabled]="conveyer.isReachStart">Start</button>\n    <button class="next" [disabled]="conveyer.isReachEnd">End</button>\n  </div>\n  <div class="items horizontal" ngxConveyer #conveyer="ngxConveyer">\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n'},3213:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<div class="examples">\n  <div class="buttons">\n    <button class="prev">Start</button>\n    <button class="next">End</button>\n  </div>\n  <div class="items horizontal">\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n'},4032:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='import Conveyer from "@egjs/conveyer";\n\nconst conveyer = new Conveyer(".items");\n\nconst prev = document.querySelector(".prev");\nconst next = document.querySelector(".next");\n\n// subscribe reactive properties\nconveyer.subscribe("isReachStart", (isReachStart) => {\n  prev.disabled = isReachStart;\n});\n\nconveyer.subscribe("isReachEnd", (isReachEnd) => {\n  next.disabled = isReachEnd;\n});\n'},4416:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<script>\n  import { useConveyer } from "@egjs/svelte-conveyer";\n\n  const {\n    ref,\n    isReachStart,\n    isReachEnd,\n  } = useConveyer();\n<\/script>\n<div class="examples">\n  <div class="buttons">\n    <button class="prev" disabled={$isReachStart}>Start</button>\n    <button class="next" disabled={$isReachEnd}>End</button>\n  </div>\n  <div class="items horizontal" use:ref>\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n'},714:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<template>\n<div class="examples">\n  <div class="buttons">\n    <button class="prev" :disabled="isReachStart">Start</button>\n    <button class="next" :disabled="isReachEnd">End</button>\n  </div>\n  <div class="items horizontal" ref="ref">\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n</template>\n<script lang="ts">\nimport { useConveyer } from "@egjs/vue-conveyer";\n\nexport default {\n  setup() {\n    const {\n      ref,\n      isReachStart,\n      isReachEnd,\n    } = useConveyer();\n\n    return {\n      ref,\n      isReachStart,\n      isReachEnd,\n    };\n  },\n};\n<\/script>\n'},3858:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i=""},4153:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<div class="examples">\n  <div class="items horizontal" [ngxConveyer]="{ useSideWheel: true }">\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n'},208:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<div class="examples">\n  <div class="items horizontal">\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n'},5532:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='import Conveyer from "@egjs/conveyer";\n\nconst conveyer = new Conveyer(".items", {\n  useSideWheel: true,\n});\n'},5482:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<script>\n  import { useConveyer } from "@egjs/svelte-conveyer";\n\n  const {\n    ref,\n  } = useConveyer({\n    horizontal: false,\n  });\n<\/script>\n<div class="examples">\n  <div class="items horizontal" use:ref>\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n'},9006:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<template>\n<div class="examples">\n  <div class="items horizontal" ref="ref">\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n</template>\n<script lang="ts">\nimport { useConveyer } from "@egjs/vue-conveyer";\n\nexport default {\n  setup() {\n    const { ref } = useConveyer({\n      useSideWheel: true,\n    });\n\n    return {\n      ref,\n    };\n  },\n};\n<\/script>\n'},8016:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i=""},3124:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<div class="examples">\n  <div class="items vertical" [ngxConveyer]="{ horizontal: false }">\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n'},9054:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<div class="examples">\n  <div class="items vertical">\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n'},5974:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='import Conveyer from "@egjs/conveyer";\n\nconst conveyer = new Conveyer(".items", {\n  horizontal: false,\n});\n'},3461:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<script>\n  import { useConveyer } from "@egjs/svelte-conveyer";\n\n  const {\n    ref,\n  } = useConveyer({\n    horizontal: false,\n  });\n<\/script>\n<div class="examples">\n  <div class="items vertical" use:ref>\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n'},7859:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});const i='<template>\n<div class="examples">\n  <div class="items vertical" ref="ref">\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n    <div class="item">6</div>\n    <div class="item">7</div>\n    <div class="item">8</div>\n    <div class="item">9</div>\n    <div class="item">10</div>\n  </div>\n</div>\n</template>\n<script lang="ts">\nimport { useConveyer } from "@egjs/vue-conveyer";\n\nexport default {\n  setup() {\n    const { ref } = useConveyer({\n      horizontal: false,\n    });\n\n    return {\n      ref,\n    };\n  },\n};\n<\/script>\n'},4906:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});const i='import * as React from "react";\nimport { useConveyer } from "@egjs/react-conveyer";\nimport { MasonryInfiniteGrid } from "@egjs/react-infinitegrid";\n\n\nfunction getItems(nextGroupKey: number, count: number) {\n  const nextItems = [];\n  const nextKey = nextGroupKey * count;\n\n  for (let i = 0; i < count; ++i) {\n    nextItems.push({ groupKey: nextGroupKey, key: nextKey + i });\n  }\n  return nextItems;\n}\n\n\nexport default function InfiniteScroll() {\n  const gridRef = React.useRef<MasonryInfiniteGrid>();\n  const ref = React.useRef<HTMLElement>();\n  const [items, updateItems] = React.useState(() => getItems(0, 10));\n\n  const {\n    isReachStart,\n    isReachEnd,\n    setItems,\n    updateContainer,\n    scrollIntoView,\n    init,\n  } = useConveyer(ref, {\n    horizontal: false,\n    autoInit: false,\n  });\n  React.useEffect(() => {\n    ref.current = gridRef.current.getScrollContainerElement();\n    init();\n  });\n  return <div className="examples">\n    <div className="buttons">\n      <button className="prev" disabled={isReachStart} onClick={() => {\n        // start to end\n        scrollIntoView("start", {\n          align: "end",\n          duration: 500,\n          excludeStand: true,\n        });\n      }}>Prev</button>\n      <button className="next" disabled={isReachEnd} onClick={() => {\n        // end to start\n        scrollIntoView("end", {\n          align: "start",\n          duration: 500,\n          excludeStand: true,\n        });\n      }}>Next</button>\n    </div>\n    <MasonryInfiniteGrid className="items infinite" container={true} gap={5}\n      ref={gridRef}\n      onRequestAppend={e => {\n        const nextGroupKey = (+e.groupKey! || 0) + 1;\n\n        updateItems([\n          ...items,\n          ...getItems(nextGroupKey, 10),\n        ]);\n      }} onRenderComplete={e => {\n        setItems(e.currentTarget.getItems().map((item) => ({\n          element: item.element,\n          pos: item.computedContentPos,\n          size: item.contentSize,\n        })));\n        updateContainer();\n      }}>\n      {items.map((item, i) => (<div className={`item item${i % 4}`} data-grid-groupkey={item.groupKey} key={item.key}>{item.key}</div>))}\n    </MasonryInfiniteGrid>\n  </div>;\n}\n'},2400:(e,n,t)=>{var i={"./HorizontalScroll/angularComponent.txt":5031,"./InfiniteScroll/angularComponent.txt":8332,"./Intersection/angularComponent.txt":2459,"./Methods/angularComponent.txt":8155,"./ReactiveProperties/angularComponent.txt":8197,"./SideWheel/angularComponent.txt":3858,"./VerticalScroll/angularComponent.txt":8016};function s(e){var n=r(e);return t(n)}function r(e){if(!t.o(i,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return i[e]}s.keys=function(){return Object.keys(i)},s.resolve=r,e.exports=s,s.id=2400},7407:(e,n,t)=>{var i={"./HorizontalScroll/angularHTML.txt":3169,"./InfiniteScroll/angularHTML.txt":4718,"./Intersection/angularHTML.txt":8228,"./Methods/angularHTML.txt":5421,"./ReactiveProperties/angularHTML.txt":4002,"./SideWheel/angularHTML.txt":4153,"./VerticalScroll/angularHTML.txt":3124};function s(e){var n=r(e);return t(n)}function r(e){if(!t.o(i,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return i[e]}s.keys=function(){return Object.keys(i)},s.resolve=r,e.exports=s,s.id=7407},3224:(e,n,t)=>{var i={"./HorizontalScroll/html.txt":5652,"./InfiniteScroll/html.txt":1615,"./Intersection/html.txt":5472,"./Methods/html.txt":6751,"./ReactiveProperties/html.txt":3213,"./SideWheel/html.txt":208,"./VerticalScroll/html.txt":9054};function s(e){var n=r(e);return t(n)}function r(e){if(!t.o(i,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return i[e]}s.keys=function(){return Object.keys(i)},s.resolve=r,e.exports=s,s.id=3224},3405:(e,n,t)=>{var i={"./HorizontalScroll/js.txt":3635,"./InfiniteScroll/js.txt":5657,"./Intersection/js.txt":2275,"./Methods/js.txt":5629,"./ReactiveProperties/js.txt":4032,"./SideWheel/js.txt":5532,"./VerticalScroll/js.txt":5974};function s(e){var n=r(e);return t(n)}function r(e){if(!t.o(i,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return i[e]}s.keys=function(){return Object.keys(i)},s.resolve=r,e.exports=s,s.id=3405},4676:(e,n,t)=>{var i={"./HorizontalScroll/svelte.txt":1739,"./InfiniteScroll/svelte.txt":1565,"./Intersection/svelte.txt":4781,"./Methods/svelte.txt":9159,"./ReactiveProperties/svelte.txt":4416,"./SideWheel/svelte.txt":5482,"./VerticalScroll/svelte.txt":3461};function s(e){var n=r(e);return t(n)}function r(e){if(!t.o(i,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return i[e]}s.keys=function(){return Object.keys(i)},s.resolve=r,e.exports=s,s.id=4676},6145:(e,n,t)=>{var i={"./HorizontalScroll/vue.txt":9485,"./InfiniteScroll/vue.txt":8668,"./Intersection/vue.txt":1989,"./Methods/vue.txt":2890,"./ReactiveProperties/vue.txt":714,"./SideWheel/vue.txt":9006,"./VerticalScroll/vue.txt":7859};function s(e){var n=r(e);return t(n)}function r(e){if(!t.o(i,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return i[e]}s.keys=function(){return Object.keys(i)},s.resolve=r,e.exports=s,s.id=6145}}]);