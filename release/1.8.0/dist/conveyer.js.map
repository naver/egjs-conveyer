{"version":3,"file":"conveyer.js","sources":["../src/browser.ts","../src/utils.ts","../src/Conveyer.ts","../src/consts.ts","../src/reactive.ts","../src/index.ts","../src/index.umd.ts"],"sourcesContent":["/**\n * egjs-conveyer\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nexport const IS_IE = /msie|trident/g.test(\n  (typeof window !== \"undefined\" && window?.navigator?.userAgent?.toLowerCase()) || \"\",\n);\n","/**\n * egjs-conveyer\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nexport function isString(val: any): val is string {\n  return typeof val === \"string\";\n}\n\nexport function findIndex<T>(arr: T[], callback: (element: T, index: number) => boolean) {\n  const length = arr.length;\n\n  for (let i = 0; i < length; ++i) {\n    if (callback(arr[i], i)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n\nexport function instanceOfElement(el: any): el is Element {\n  return el instanceof Element || el instanceof Node;\n}\n\n\nexport function isIntersection(\n  pos1: number,\n  pos2: number,\n  target: \"start\" | \"end\",\n  intersection?: boolean | number,\n) {\n  if (!intersection) {\n    return false;\n  }\n  const intersectionRatio = intersection === true ? 1 : intersection;\n  const size = intersectionRatio * Math.abs(pos2 - pos1);\n\n  if (target === \"end\") {\n    // pos1 위치를 고정하고 pos2를 pos1 + size으로 보정\n    // Fix the position pos1 and adjust pos2 to pos1 + size\n    return pos1 < 0 && pos1 + size > 0;\n  }\n\n  // pos2 위치를 고정하고 pos1를 pos2 - size으로 보정\n  // Fix the position pos2 and adjust pos1 to pos2 - size\n  return pos2 - size < 0 && pos2 > 0;\n}\n","/**\n * egjs-conveyer\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nimport Axes, { OnChange, OnHold, PanInput, WheelInput } from \"@egjs/axes\";\nimport Component from \"@egjs/component\";\nimport { diff } from \"@egjs/children-differ\";\nimport { IS_IE } from \"./browser\";\nimport { ReactiveSubscribe, Reactive, Ref } from \"@cfcs/core\";\nimport {\n  ConveyerEvents, ConveyerItem,\n  ConveyerOptions, FindItemOptions, ConveyerReactiveState,\n  ScrollIntoViewOptions,\n} from \"./types\";\nimport { instanceOfElement, isIntersection, isString } from \"./utils\";\n\n\n/**\n * Conveyer adds Drag gestures to your Native Scroll.\n * @ko Conveyer는 네이티브 스크롤에 드래그 제스처를 추가합니다.\n * @extends Component\n * @support {\"ie\": \"9+(with polyfill)\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"4.X+\"}\n * @example\n```html\n<div class=\"items\">\n  <div class=\"item\"></div>\n  <div class=\"item\"></div>\n  <div class=\"item\"></div>\n</div>\n<script>\nimport Conveyer from \"@egjs/conveyer\";\n\nconst conveyer = new Conveyer(\".items\");\n</script>\n```\n */\n@ReactiveSubscribe\nclass Conveyer extends Component<ConveyerEvents> {\n  protected _scrollAreaElement: HTMLElement;\n  protected _axes: Axes | null = null;\n  protected _items: ConveyerItem[] = [];\n  protected _size = 0;\n  protected _scrollSize = 0;\n  protected _options: ConveyerOptions;\n  protected _animateParam: {\n    expectedPos: number;\n    offset: number;\n  } | null = null;\n\n  private _resizeObserver: ResizeObserver | null = null;\n  private _scrollTimer = 0;\n  private _isWheelScroll = false;\n  private _isDragScroll = false;\n  private _isAnimationScroll = false;\n  private _scrollArea: string | HTMLElement | Ref<HTMLElement>;\n\n  private _panInput: PanInput | null = null;\n  private _wheelInput: WheelInput | null = null;\n\n  /**\n   * Whether the scroll has reached the start.\n   * @ko 스크롤이 시작에 닿았는지 여부.\n   * @name Conveyer#isReachStart\n   * @type {boolean}\n   * @default true\n   * @readonly\n   * @example\n   * ```js\n   * import { Conveyer } from \"@egjs/conveyer\";\n   *\n   * const conveyer = new Conveyer(\".container\");\n   *\n   * conveyer.isReachStart\n   * ```\n   */\n  @Reactive(\"isReachStart\") private _isReachStart = true;\n  /**\n   * Whether the scroll has reached the end.\n   * @ko 스크롤이 끝에 닿았는지 여부.\n   * @name Conveyer#isReachEnd\n   * @type {boolean}\n   * @default false\n   * @readonly\n   * @example\n   * ```js\n   * import { Conveyer } from \"@egjs/conveyer\";\n   *\n   * const conveyer = new Conveyer(\".container\");\n   *\n   * conveyer.isReachEnd\n   * ```\n   */\n  @Reactive(\"isReachEnd\") private _isReachEnd = false;\n  /**\n   * the scroll position of the container\n   * @ko 컨테이너의 스크롤 위치\n   * @name Conveyer#scrollPos\n   * @type {number}\n   * @default 0\n   * @readonly\n   * @example\n   * ```js\n   * import { Conveyer } from \"@egjs/conveyer\";\n   *\n   * const conveyer = new Conveyer(\".container\");\n   *\n   * conveyer.scrollPos\n   * ```\n   */\n  @Reactive(\"scrollPos\") protected _pos = 0;\n  /**\n   * @param - A base element for a module <ko>모듈을 적용할 기준 엘리먼트</ko>\n   * @param - The option object of the InfiniteGrid module <ko>eg.InfiniteGrid 모듈의 옵션 객체</ko>\n   */\n  constructor(scrollArea: string | HTMLElement | Ref<HTMLElement>, options: ConveyerOptions = {}) {\n    super();\n    this._options = {\n      horizontal: true,\n      useDrag: true,\n      useSideWheel: false,\n      autoInit: true,\n      boundaryMargin: 0,\n      scrollDebounce: 100,\n      useResizeObserver: false,\n      ...options,\n    };\n\n    this._scrollArea = scrollArea;\n    if (this._options.autoInit) {\n      this.init();\n    }\n  }\n  /**\n   * Finds an element for that direction.\n   * @ko 해당 방향에 대해 엘리먼트를 찾는다.]\n   * @see {@link /docs/examples/Methods direction's example} page for detailed information\n   * @param - direction of the element. \"start\" and \"end\" find inside. \"prev\" and \"next\" find outside. <ko>엘리먼트의 방향. \"start\", \"end\"는 안쪽으로 찾는다. \"prev\", \"next\"는 바깥쪽으로 찾는다.</ko>\n   * @param - Options for the `findElement` method. <ko>findElement 메서드의 옵션</ko>\n   * @example\n   * <p align=\"center\">\n   *  <img src=\"https://naver.github.io/egjs-conveyer/img/scrollIntoView1.png\" height=\"200\" />\n   * </p>\n   * <p align=\"center\">\n   *   <img src=\"https://naver.github.io/egjs-conveyer/img/scrollIntoView2.png\" height=\"210\" />\n   * </p>\n   */\n  public findElement(direction: \"start\" | \"end\" | \"prev\" | \"next\", options: FindItemOptions = {}) {\n    return this.findItem(direction, options)?.element || null;\n  }\n  /**\n   * Finds an item for an element or its direction.\n   * @ko 엘리먼트 또는 해당 방향에 대해 아이템을 찾는다.\n   * @see {@link /docs/examples/Methods direction's example} page for detailed information\n   * @param - direction of the element. \"start\" and \"end\" find inside. \"prev\" and \"next\" find outside. <ko>엘리먼트의 방향. \"start\", \"end\"는 안쪽으로 찾는다. \"prev\", \"next\"는 바깥쪽으로 찾는다.</ko>\n   * @param - Options for the `findItem` method. <ko>`findItem` 메서드의 옵션</ko>\n   * @example\n   * <p align=\"center\">\n   *  <img src=\"https://naver.github.io/egjs-conveyer/img/scrollIntoView1.png\" height=\"200\" />\n   * </p>\n   * <p align=\"center\">\n   *   <img src=\"https://naver.github.io/egjs-conveyer/img/scrollIntoView2.png\" height=\"210\" />\n   * </p>\n   */\n  public findItem(\n    target: HTMLElement | \"start\" | \"end\" | \"prev\" | \"next\",\n    options: FindItemOptions = {},\n  ): ConveyerItem | null {\n    const pos = this._pos;\n    const scrollSize = this._scrollSize;\n    const size = this._size;\n    const hitTest = options?.hitTest ?? 1;\n    const items = [...this._items];\n    const length = items.length;\n    const endPos = pos + size;\n    const sibling = options.sibling;\n    const intersection = options.intersection;\n    const startVirtualItem = { pos: 0, size: 0 };\n    const endVirtualItem = { pos: scrollSize, size: 0 };\n\n    if (items[0].pos > 0) {\n      items.unshift(startVirtualItem);\n    }\n    if (length && items[length - 1].pos + items[length - 1].size < scrollSize) {\n      items.push(endVirtualItem);\n    }\n    let selectedItem: ConveyerItem | undefined;\n\n\n    if (target === \"start\") {\n      if (pos < 0) {\n        return null;\n      }\n      const selectedItems = items.filter(item => {\n        const itemSize = item.size;\n        const dist = item.pos - pos;\n        const dist2 = dist + itemSize;\n\n        return (dist >= 0)\n          || (dist2 > 0 && isIntersection(dist, dist2, \"end\", intersection))\n          || (dist2 >= 0 && (!itemSize || Math.abs(dist2) / itemSize >= hitTest));\n      });\n\n      selectedItem = (selectedItems[0] === startVirtualItem && selectedItems[1]) || selectedItems[0];\n    } else if (target === \"end\") {\n      if (pos > scrollSize - size) {\n        return null;\n      }\n      const selectedItems = items.filter(item => {\n        const itemSize = item.size;\n        const dist = item.pos + itemSize - endPos;\n        const dist2 = dist - itemSize;\n\n        return dist <= 0\n          || (dist2 < 0 && isIntersection(dist2, dist, \"start\", intersection))\n          || (dist2 <= 0 && (!itemSize || Math.abs(dist2) / itemSize >= hitTest));\n      }).reverse();\n\n      selectedItem = (selectedItems[0] === endVirtualItem && selectedItems[1]) || selectedItems[0];\n    } else if (target === \"prev\") {\n      selectedItem = items.filter(item => {\n        const itemSize = item.size;\n        const dist = item.pos + itemSize - pos;\n        const dist2 = dist - itemSize;\n\n        return dist <= 0\n          || (dist2 < 0 && isIntersection(dist2, dist, \"start\", intersection))\n          || (dist2 <= 0 && (!itemSize || Math.abs(dist2) / itemSize >= hitTest));\n      }).reverse()[0] || startVirtualItem;\n    } else if (target === \"next\") {\n      selectedItem = items.filter(item => {\n        const itemSize = item.size;\n        const dist = item.pos - endPos;\n        const dist2 = dist + itemSize;\n\n        return dist >= 0\n          || (dist2 > 0 && isIntersection(dist, dist2, \"end\", intersection))\n          || (dist2 >= 0 && (!itemSize || Math.abs(dist2) / itemSize >= hitTest));\n      })[0] || endVirtualItem;\n    } else {\n      return this._getItem(target);\n    }\n    if (sibling && selectedItem) {\n      const selectedIndex = items.indexOf(selectedItem);\n\n      if (selectedIndex > -1) {\n        selectedItem = items[selectedIndex + sibling];\n      }\n    }\n    return selectedItem || null;\n  }\n  /**\n   * Scrolls an element or an item in that direction into the view.\n   * @ko 엘리먼트나 해당 방향에 있는 아이템을 뷰안으로 스크롤을 한다.\n   * @see {@link /docs/examples/Methods target's example} page for detailed information\n   * @param - direction of the element. \"start\" and \"end\" find inside. \"prev\" and \"next\" find outside. <ko>엘리먼트의 방향. \"start\", \"end\"는 안쪽으로 찾는다. \"prev\", \"next\"는 바깥쪽으로 찾는다.</ko>\n   * @param - Options for the `scrollIntoView` method. <ko>`scrollIntoView` 메서드의 옵션</ko>\n   * @example\n   * <p align=\"center\">\n   *  <img src=\"https://naver.github.io/egjs-conveyer/img/scrollIntoView1.png\" height=\"200\" />\n   * </p>\n   * <p align=\"center\">\n   *   <img src=\"https://naver.github.io/egjs-conveyer/img/scrollIntoView2.png\" height=\"210\" />\n   * </p>\n   */\n  public scrollIntoView(target: HTMLElement | \"start\" | \"end\" | \"prev\" | \"next\", options: ScrollIntoViewOptions = {}) {\n    let item = this.findItem(target, options);\n\n    if (!item) {\n      return;\n    }\n    const duration = options.duration || 0;\n    let nextScrollPos = this._getNextScrollPos(item, options);\n\n    if (isString(target) && options.excludeStand && nextScrollPos === this._pos) {\n      const selectedIndex = this._items.indexOf(item);\n\n      if (selectedIndex === -1) {\n        return;\n      }\n      const sibling = target === \"start\" || target === \"prev\" ? -1 : 1;\n      item = this._items[selectedIndex + sibling];\n\n      if (!item) {\n        return;\n      }\n      nextScrollPos = this._getNextScrollPos(item, options);\n    }\n\n    this.scrollBy(nextScrollPos - this._pos, duration);\n  }\n  /**\n   * Scrolls by the given position amount.\n   * @ko 주어진 위치 양만큼 스크롤한다.\n   * @param - Amount of position to scroll by. <ko>스크롤할 위치의 양.</ko>\n   * @param - Duration to scroll by that position. <ko>해당 위치만큼 스크롤하는 시간</ko>\n   */\n  public scrollBy(pos: number, duration = 0) {\n    this._createAnimationParam(pos);\n    this._axes!.setBy({ scroll: -pos }, duration);\n  }\n  /**\n   * Scroll to the given position.\n   * @ko 주어진 위치로 스크롤한다.\n   * @param - Amount of position to scroll to. <ko>스크롤할 위치의 양.</ko>\n   * @param - Duration to scroll to that position. <ko>해당 위치로 스크롤하는 시간</ko>\n   */\n  public scrollTo(pos: number, duration = 0) {\n    this.scrollBy(pos - this._pos, duration);\n  }\n  /**\n   * Set the items directly to the Conveyer.\n   * @ko Conveyer에 아이템들을 직접 설정한다.\n   * @param - Items to set on Conveyer <ko>Conveyer에 설정할 아이템들</ko>\n   */\n  public setItems(items: ConveyerItem[]) {\n    this._items = items;\n  }\n  /**\n   * Update the position and size information of items.\n   * @ko 아이템들의 포지션, 사이즈 정보를 업데이트 한다.\n   */\n  public updateItems() {\n    const scrollAreaElement = this._scrollAreaElement;\n    const itemSelector = this._options.itemSelector;\n    const resizeObserver = this._resizeObserver;\n    const prevItemElements = this._items.map(item => item.element!);\n\n    const itemElements = [].slice.call(\n      itemSelector ? scrollAreaElement.querySelectorAll(itemSelector) : scrollAreaElement.children,\n    );\n    this.setItems(itemElements.map((el) => this._getItem(el)));\n\n    if (resizeObserver) {\n      const changed = diff(prevItemElements, itemElements);\n      const removed = changed.removed;\n      const added = changed.added;\n\n      removed.forEach((index) => resizeObserver.unobserve(changed.prevList[index]));\n      added.forEach((index) => resizeObserver.observe(changed.list[index]));\n    }\n\n  }\n  /**\n   * Update container size and scroll size.\n   * @ko 컨테이너의 크기, 스크롤 사이즈를 업데이트 한다.\n   */\n  public updateContainer() {\n    const scrollAreaElement = this._scrollAreaElement;\n    const horizontal = this._options.horizontal;\n\n    const size = horizontal ? scrollAreaElement.clientWidth : scrollAreaElement.clientHeight;\n    let scrollSize = horizontal ? scrollAreaElement.scrollWidth : scrollAreaElement.scrollHeight;\n\n    // check decimal point\n    if (IS_IE && scrollSize === size + 1) {\n      const style = getComputedStyle(scrollAreaElement);\n      const boxSizing = style.boxSizing;\n      const borderSize = horizontal\n        ? (parseFloat(style.borderLeftWidth) || 0) + (parseFloat(style.borderRightWidth) || 0)\n        : (parseFloat(style.borderTopWidth) || 0) + (parseFloat(style.borderBottomWidth) || 0);\n      const cssSize = parseFloat(horizontal ? style.width : style.height) || 0;\n      const contentSize = cssSize - (boxSizing === \"border-box\" ? borderSize : 0);\n\n      // 0 < 0.5 && 0.5 < 1\n      if (size < contentSize && contentSize < size + 1) {\n        scrollSize = size;\n      }\n    }\n    this._size = size;\n    this._scrollSize = scrollSize;\n    this._refreshScroll();\n    this._onScroll();\n  }\n  /**\n   * Updating containers and items.\n   * @ko 컨테이너와 아이템들을 업데이트 한다.\n   * @method\n   */\n  public update = () => {\n    this.updateItems();\n    this.updateContainer();\n  }\n  /**\n   * Enables PanInput and WheelInput operations in mouse case.\n   * @ko mouse 케이스에서 PanInput, WheelInput의 동작을 활성화한다.\n   */\n  public enableInput() {\n    this._panInput?.enable();\n    this._wheelInput?.enable();\n  }\n  /**\n   * Disables PanInput and WheelInput operations in mouse case.\n   * @ko mouse 케이스에서 PanInput, WheelInput의 동작을 비활성화한다.\n   */\n  public disableInput() {\n    this._panInput?.disable();\n    this._wheelInput?.disable();\n  }\n  /**\n   * If you use the autoInit option as false, you can initialize it directly through the init method.\n   * @ko autoInit 옵션을 false로 사용하는 경우 직접 init 메서드를 통해 초기화 할 수 있다.\n   */\n  public init() {\n    if (this._axes) {\n      return;\n    }\n\n    const scrollArea = this._scrollArea;\n    let el!: HTMLElement;\n\n    if (isString(scrollArea)) {\n      el = document.querySelector<HTMLElement>(scrollArea)!;\n    } else if (instanceOfElement(scrollArea)) {\n      el = scrollArea;\n    } else if (\"value\" in scrollArea || \"current\" in scrollArea) {\n      el = scrollArea.value! || scrollArea.current!;\n    }\n\n    if (!el) {\n      return;\n    }\n\n    this._scrollAreaElement = el;\n    let isDrag = false;\n    const scrollAreaElement = this._scrollAreaElement;\n    const options = this._options;\n    const axes = new Axes({\n      scroll: {\n        range: [-Infinity, Infinity],\n      },\n    }, {\n      deceleration: 0.005,\n      round: 1,\n      nested: options.nested,\n    }, {\n      scroll: 0,\n    });\n    let isHold = false;\n\n    axes.on({\n      \"hold\": e => {\n        isHold = true;\n        isDrag = false;\n        const nativeEvent = this._getNativeEvent(e);\n\n        if (!nativeEvent) {\n          return;\n        }\n        if (options.preventDefault) {\n          nativeEvent.preventDefault();\n        }\n      },\n      \"change\": e => {\n        const nativeEvent = this._getNativeEvent(e);\n        const animateParam = this._animateParam;\n        if (options.useSideWheel && this._isMixedWheel(nativeEvent)) {\n          return;\n        }\n        this._isWheelScroll = !!nativeEvent && nativeEvent.type === \"wheel\";\n        this._isDragScroll = !!nativeEvent && !this._isWheelScroll;\n        this._isAnimationScroll = !this._isWheelScroll && !isHold;\n        isDrag = true;\n        const scroll = e.delta.scroll;\n        if (!e.isTrusted && animateParam) {\n          animateParam.expectedPos -= scroll;\n          if (options.horizontal) {\n            scrollAreaElement.scrollLeft = animateParam.expectedPos + animateParam.offset;\n          } else {\n            scrollAreaElement.scrollTop = animateParam.expectedPos + animateParam.offset;\n          }\n        } else {\n          this._animateParam = null;\n          if (options.horizontal) {\n            scrollAreaElement.scrollLeft -= scroll;\n          } else {\n            scrollAreaElement.scrollTop -= scroll;\n          }\n        }\n        if (options.nested) {\n          this._checkNestedMove(nativeEvent);\n        }\n      },\n      \"release\": e => {\n        if (!isDrag) {\n          e.setTo({ ...e.depaPos }, 0);\n        }\n        isHold = false;\n        isDrag = false;\n      },\n    });\n\n    this._axes = axes;\n    if (options.useDrag) {\n      this._panInput = new PanInput(scrollAreaElement, {\n        preventClickOnDrag: options.preventClickOnDrag,\n        preventDefaultOnDrag: options.preventDefaultOnDrag,\n        inputType: [\"mouse\"],\n        touchAction: \"auto\",\n      });\n      axes.connect(options.horizontal ? [\"scroll\", \"\"] : [\"\", \"scroll\"], this._panInput);\n    }\n    if (options.useSideWheel) {\n      this._wheelInput = new WheelInput(scrollAreaElement, {\n        useNormalized: false,\n      });\n      axes.connect(options.horizontal ? [\"scroll\", \"\"] : [\"\", \"scroll\"], this._wheelInput);\n    }\n    if (options.useResizeObserver && window.ResizeObserver) {\n      this._resizeObserver = new ResizeObserver((entries: ResizeObserverEntry[]) => {\n        const items = this._items;\n        const length = items.length;\n        let index = length;\n\n        entries.forEach((entry: ResizeObserverEntry) => {\n          if (entry.target !== this._scrollAreaElement) {\n            for (let i = 0; i < length; i++) {\n              if (items[i].element === entry.target) {\n                index = Math.min(index, i);\n                break;\n              }\n            }\n          }\n        });\n\n        for (let i = index; i < length; i++) {\n          items[i] = this._getItem(items[i].element!);\n        }\n        this.updateContainer();\n      });\n\n    }\n\n    this.update();\n\n    this._resizeObserver?.observe(scrollAreaElement);\n    scrollAreaElement.addEventListener(\"scroll\", this._onScroll);\n    window.addEventListener(\"resize\", this.update);\n  }\n  /**\n   * Releases the instnace and events.\n   * @ko 인스턴스와 이벤트를 해제한다.\n   */\n  public destroy() {\n    this._axes?.destroy();\n    this.unsubscribe();\n    this._scrollAreaElement?.removeEventListener(\"scroll\", this._onScroll);\n    this._resizeObserver?.disconnect();\n\n    if (typeof window !== \"undefined\") {\n      window.removeEventListener(\"resize\", this.update);\n    }\n    this.off();\n    this._panInput = null;\n    this._wheelInput = null;\n    this._axes = null;\n    this._resizeObserver = null;\n  }\n  private _refreshScroll() {\n    const horizontal = this._options.horizontal;\n    const scrollAreaElement = this._scrollAreaElement;\n\n    this._pos = Math.min(\n      this._scrollSize - this._size,\n      horizontal ? scrollAreaElement.scrollLeft : scrollAreaElement.scrollTop,\n    );\n  }\n  private _getItem(element: HTMLElement): ConveyerItem {\n    const horizontal = this._options.horizontal;\n\n    return {\n      element,\n      pos: horizontal ? element.offsetLeft : element.offsetTop,\n      size: horizontal ? element.offsetWidth : element.offsetHeight,\n    };\n  }\n  private _getNativeEvent(e: OnHold | OnChange) {\n    return e?.inputEvent?.srcEvent ? e.inputEvent?.srcEvent : e?.inputEvent;\n  }\n  private _getNextScrollPos(item: ConveyerItem, options: ScrollIntoViewOptions) {\n    const size = this._size;\n    const scrollSize = this._scrollSize;\n    const align = options.align || \"start\";\n    const padding = options.offset || 0;\n    const itemPos = item!.pos;\n    const itemSize = item!.size;\n    let scrollPos = 0;\n\n    if (align === \"start\") {\n      scrollPos = itemPos - padding;\n    } else if (align === \"end\") {\n      scrollPos = itemPos + itemSize - size + padding;\n    } else if (align === \"center\") {\n      scrollPos = itemPos + itemSize / 2 - size / 2 + padding;\n    }\n    scrollPos = Math.max(0, Math.min(scrollPos, scrollSize - size));\n    return scrollPos;\n  }\n  private _isMixedWheel(nativeEvent: any) {\n    return !!nativeEvent && nativeEvent?.type === \"wheel\" && nativeEvent?.deltaX && nativeEvent?.deltaY;\n  }\n  private _checkNestedMove(nativeEvent: any) {\n    if (this.isReachStart || this.isReachEnd) {\n      nativeEvent.__childrenAxesAlreadyChanged = false;\n    }\n  }\n  private _onScroll = (e?: any) => {\n    if (e) {\n      this._debounceScroll();\n    }\n    this._refreshScroll();\n\n    const size = this._size;\n    const scrollSize = this._scrollSize;\n    const pos = this._pos;\n    const boundaryMargin = this._options.boundaryMargin ?? 0;\n\n    // enter start\n    if (pos <= boundaryMargin && this.isReachStart !== true) {\n      this._isReachStart = true;\n      /**\n       * This event is fired when scroll reach start.\n       * @ko 스크롤이 앞에 닿으면 발생하는 이벤트이다.\n       * @event Conveyer#reachStart\n       */\n      this.trigger(\"reachStart\");\n    } else if (pos > boundaryMargin && this.isReachStart !== false) {\n      this._isReachStart = false;\n      /**\n       * This event is fired when scroll leave start.\n       * @ko 스크롤이 앞에서 떠나면 발생하는 이벤트이다.\n       * @event Conveyer#leaveStart\n       */\n      this.trigger(\"leaveStart\");\n    }\n    // enter end\n    if (scrollSize - size - pos < 1 + boundaryMargin && this.isReachEnd !== true) {\n      this._isReachEnd = true;\n      /**\n       * This event is fired when scroll reach end.\n       * @ko 스크롤이 끝에 닿으면 발생하는 이벤트이다.\n       * @event Conveyer#reachEnd\n       */\n      this.trigger(\"reachEnd\");\n    } else if (!(scrollSize - size - pos < 1 + boundaryMargin) && this.isReachEnd !== false) {\n      this._isReachEnd = false;\n      /**\n       * This event is fired when scroll leave end.\n       * @ko 스크롤이 끝에서 떠나면 발생하는 이벤트이다.\n       * @event Conveyer#leaveEnd\n       */\n      this.trigger(\"leaveEnd\");\n    }\n  }\n  private _debounceScroll() {\n    if (!this._scrollTimer) {\n      /**\n       * This event is fired when begin scroll.\n       * @ko 스크롤이 시작하면 발생하는 이벤트이다.\n       * @event Conveyer#beginScroll\n       */\n      this.trigger(\"beginScroll\");\n    }\n    window.clearTimeout(this._scrollTimer);\n    this._scrollTimer = window.setTimeout(() => {\n      const isWheelScroll = this._isWheelScroll;\n      const isDragScroll = this._isDragScroll;\n      const isAnimationScroll = this._isAnimationScroll;\n      this._scrollTimer = 0;\n      /**\n       * This event is fired when finish scroll.\n       * @ko 스크롤이 끝나면 발생하는 이벤트이다.\n       * @event Conveyer#finishScroll\n       * @param {OnFinishScroll} e - The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n       */\n      this.trigger(\"finishScroll\", {\n        isWheelScroll,\n        isDragScroll,\n        isAnimationScroll,\n        isTrusted: isWheelScroll || isDragScroll || !isAnimationScroll,\n      });\n\n      this._isWheelScroll = false;\n      this._isDragScroll = false;\n      this._isAnimationScroll = false;\n    }, this._options.scrollDebounce);\n  }\n\n  private _createAnimationParam(pos: number) {\n    // Save a decimal point before starting the animation\n    // and in case of animation (isTrusted: false), add the offset and scroll.\n    this._animateParam = {\n      expectedPos: this._pos,\n      offset: pos % 1,\n    };\n  }\n}\n\n\ninterface Conveyer extends ConveyerReactiveState, ReactiveSubscribe<ConveyerReactiveState> { }\n\nexport default Conveyer;\n","/**\n * egjs-conveyer\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nexport const CONVEYER_METHODS = [\n  \"update\",\n  \"findElement\",\n  \"findItem\",\n  \"scrollBy\",\n  \"scrollTo\",\n  \"scrollIntoView\",\n  \"setItems\",\n  \"updateContainer\",\n  \"updateItems\",\n  \"init\",\n  \"enableInput\",\n  \"disableInput\",\n] as const;\n\nexport const CONVEYER_EVENTS = [\n  \"reachStart\",\n  \"reachEnd\",\n  \"leaveStart\",\n  \"leaveEnd\",\n  \"beginScroll\",\n  \"finishScroll\",\n] as const;\n\n","/**\n * egjs-conveyer\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nimport Conveyer from \"./Conveyer\";\nimport { CONVEYER_EVENTS, CONVEYER_METHODS } from \"./consts\";\nimport { ReactiveAdapter, Ref } from \"@cfcs/core\";\nimport { ConveyerEvents, ConveyerMethods, ConveyerOptions, ConveyerReactiveState } from \"./types\";\n\n\nexport interface ConveyerData {\n  container: Ref<HTMLElement>;\n  props: ConveyerOptions;\n}\n\nexport const REACTIVE_CONVEYER: ReactiveAdapter<\n  Conveyer,\n  ConveyerReactiveState,\n  keyof ConveyerMethods,\n  ConveyerData,\n  ConveyerEvents\n> = {\n  methods: CONVEYER_METHODS,\n  events: CONVEYER_EVENTS,\n  created(data) {\n    return new Conveyer(data.container, { ...data.props, autoInit: false });\n  },\n  init(instance, data) {\n    if (data.props.autoInit !== false) {\n      instance!.init();\n    }\n  },\n  on(instance, name, callback) {\n    instance.on(name, callback);\n  },\n  off(instance, name, callback) {\n    instance.off(name, callback);\n  },\n  destroy(instance) {\n    instance.destroy();\n  },\n};\n","/**\n * egjs-conveyer\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nimport Conveyer from \"./Conveyer\";\n\nexport default Conveyer;\n\nexport * from \"./consts\";\nexport * from \"./types\";\nexport * from \"./reactive\";\n","/**\n * egjs-conveyer\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nimport Conveyer, * as modules from \"./index\";\n\nfor (const name in modules) {\n  (Conveyer as any)[name] = (modules as any)[name];\n}\n\nexport default Conveyer;\n"],"names":["IS_IE","test","window","navigator","userAgent","toLowerCase","isString","val","instanceOfElement","el","Element","Node","isIntersection","pos1","pos2","target","intersection","intersectionRatio","size","Math","abs","__extends","scrollArea","options","_super","_this","updateItems","updateContainer","e","_debounceScroll","_refreshScroll","_size","scrollSize","_scrollSize","pos","_pos","boundaryMargin","_options","isReachStart","_isReachStart","trigger","isReachEnd","_isReachEnd","horizontal","useDrag","useSideWheel","autoInit","scrollDebounce","useResizeObserver","_scrollArea","init","direction","findItem","element","hitTest","items","_items","length","endPos","sibling","startVirtualItem","endVirtualItem","unshift","push","selectedItem","selectedItems","filter","item","itemSize","dist","dist2","reverse","_getItem","selectedIndex","indexOf","duration","nextScrollPos","_getNextScrollPos","excludeStand","scrollBy","_createAnimationParam","_axes","setBy","scroll","scrollAreaElement","_scrollAreaElement","itemSelector","resizeObserver","_resizeObserver","prevItemElements","map","itemElements","slice","call","querySelectorAll","children","setItems","changed_1","diff","removed","added","forEach","index","unobserve","prevList","observe","list","clientWidth","clientHeight","scrollWidth","scrollHeight","style","getComputedStyle","boxSizing","borderSize","parseFloat","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","cssSize","width","height","contentSize","_onScroll","_panInput","enable","_wheelInput","disable","document","querySelector","value","current","isDrag","axes","Axes","range","Infinity","deceleration","round","nested","isHold","on","nativeEvent","_getNativeEvent","preventDefault","animateParam","_animateParam","_isMixedWheel","_isWheelScroll","type","_isDragScroll","_isAnimationScroll","delta","isTrusted","expectedPos","scrollLeft","offset","scrollTop","_checkNestedMove","setTo","depaPos","PanInput","preventClickOnDrag","preventDefaultOnDrag","inputType","touchAction","connect","WheelInput","useNormalized","ResizeObserver","entries","entry","i","min","update","addEventListener","destroy","unsubscribe","removeEventListener","disconnect","off","offsetLeft","offsetTop","offsetWidth","offsetHeight","inputEvent","srcEvent","align","padding","itemPos","scrollPos","max","deltaX","deltaY","__childrenAxesAlreadyChanged","_scrollTimer","clearTimeout","setTimeout","isWheelScroll","isDragScroll","isAnimationScroll","__decorate","Reactive","Conveyer","ReactiveSubscribe","Component","CONVEYER_METHODS","CONVEYER_EVENTS","REACTIVE_CONVEYER","methods","events","created","data","container","props","instance","name","callback","modules"],"mappingsgBAAgBC,IAAhB,CAClB,OAAOC,MAAP,KAAkB,WAAlB,KAAiC,MAAA,MAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,SAAA,GAAAA,MAAM,CAAEC,SAAR,UAAA,iBAAA,SAAA,MAAmBC,SAAnB,UAAA,iBAAA,SAAA,MAA8BC,aAA/D,CAAD,IAAkF,EAD/D,CAAd;;ICLP;;;;;AAKA,aAAgBC,SAASC;MACvB,OAAO,OAAOA,GAAP,KAAe,QAAtB;IACD;AAED,aAYgBC,kBAAkBC;MAChC,OAAOA,EAAE,YAAYC,OAAd,IAAyBD,EAAE,YAAYE,IAA9C;IACD;AAGD,aAAgBC,eACdC,MACAC,MACAC,QACAC;MAEA,IAAI,CAACA,YAAL,EAAmB;QACjB,OAAO,KAAP;;;MAEF,IAAMC,iBAAiB,GAAGD,YAAY,KAAK,IAAjB,GAAwB,CAAxB,GAA4BA,YAAtD;MACA,IAAME,IAAI,GAAGD,iBAAiB,GAAGE,IAAI,CAACC,GAAL,CAASN,IAAI,GAAGD,IAAhB,CAAjC;;MAEA,IAAIE,MAAM,KAAK,KAAf,EAAsB;;;QAGpB,OAAOF,IAAI,GAAG,CAAP,IAAYA,IAAI,GAAGK,IAAP,GAAc,CAAjC;;;;;MAKF,OAAOJ,IAAI,GAAGI,IAAP,GAAc,CAAd,IAAmBJ,IAAI,GAAG,CAAjC;IACD;;IC7BD;;;;;;;;;;;;;;;;;;;;IAoBA;;;MAAuBO,2BAAA;;;;;;;MA6ErB,iBAAA,CAAYC,UAAZ,EAAiEC,OAAjE;QAAiE,sBAAA,EAAA;UAAAA,YAAA;;;QAAjE,YACEC,WAAA,KAAA,SADF;;QA3EUC,WAAA,GAAqB,IAArB;QACAA,YAAA,GAAyB,EAAzB;QACAA,WAAA,GAAQ,CAAR;QACAA,iBAAA,GAAc,CAAd;QAEAA,mBAAA,GAGC,IAHD;QAKFA,qBAAA,GAAyC,IAAzC;QACAA,kBAAA,GAAe,CAAf;QACAA,oBAAA,GAAiB,KAAjB;QACAA,mBAAA,GAAgB,KAAhB;QACAA,wBAAA,GAAqB,KAArB;QAGAA,eAAA,GAA6B,IAA7B;QACAA,iBAAA,GAAiC,IAAjC;;;;;;;;;;;;;;;;;;QAkB0BA,mBAAA,GAAgB,IAAhB;;;;;;;;;;;;;;;;;;QAiBFA,iBAAA,GAAc,KAAd;;;;;;;;;;;;;;;;;;QAiBCA,UAAA,GAAO,CAAP;;;;;;;QA6Q1BA,YAAA,GAAS;UACdA,KAAI,CAACC,WAAL;;UACAD,KAAI,CAACE,eAAL;SAFK;;QAmOCF,eAAA,GAAY,UAACG,CAAD;;;UAClB,IAAIA,CAAJ,EAAO;YACLH,KAAI,CAACI,eAAL;;;UAEFJ,KAAI,CAACK,cAAL;;UAEA,IAAMZ,IAAI,GAAGO,KAAI,CAACM,KAAlB;UACA,IAAMC,UAAU,GAAGP,KAAI,CAACQ,WAAxB;UACA,IAAMC,GAAG,GAAGT,KAAI,CAACU,IAAjB;UACA,IAAMC,cAAc,GAAG,MAAAX,KAAI,CAACY,QAAL,CAAcD,cAAd,UAAA,iBAAA,KAAA,GAAgC,CAAvD;;UAGA,IAAIF,GAAG,IAAIE,cAAP,IAAyBX,KAAI,CAACa,YAAL,KAAsB,IAAnD,EAAyD;YACvDb,KAAI,CAACc,aAAL,GAAqB,IAArB;;;;;;;YAMAd,KAAI,CAACe,OAAL,CAAa,YAAb;WAPF,MAQO,IAAIN,GAAG,GAAGE,cAAN,IAAwBX,KAAI,CAACa,YAAL,KAAsB,KAAlD,EAAyD;YAC9Db,KAAI,CAACc,aAAL,GAAqB,KAArB;;;;;;;YAMAd,KAAI,CAACe,OAAL,CAAa,YAAb;;;;UAGF,IAAIR,UAAU,GAAGd,IAAb,GAAoBgB,GAApB,GAA0B,IAAIE,cAA9B,IAAgDX,KAAI,CAACgB,UAAL,KAAoB,IAAxE,EAA8E;YAC5EhB,KAAI,CAACiB,WAAL,GAAmB,IAAnB;;;;;;;YAMAjB,KAAI,CAACe,OAAL,CAAa,UAAb;WAPF,MAQO,IAAI,EAAER,UAAU,GAAGd,IAAb,GAAoBgB,GAApB,GAA0B,IAAIE,cAAhC,KAAmDX,KAAI,CAACgB,UAAL,KAAoB,KAA3E,EAAkF;YACvFhB,KAAI,CAACiB,WAAL,GAAmB,KAAnB;;;;;;;YAMAjB,KAAI,CAACe,OAAL,CAAa,UAAb;;SA7CI;;QAzeNf,KAAI,CAACY,QAAL;UACEM,UAAU,EAAE;UACZC,OAAO,EAAE;UACTC,YAAY,EAAE;UACdC,QAAQ,EAAE;UACVV,cAAc,EAAE;UAChBW,cAAc,EAAE;UAChBC,iBAAiB,EAAE;WAChBzB,QARL;QAWAE,KAAI,CAACwB,WAAL,GAAmB3B,UAAnB;;QACA,IAAIG,KAAI,CAACY,QAAL,CAAcS,QAAlB,EAA4B;UAC1BrB,KAAI,CAACyB,IAAL;;;;;;;;;;;;;;;;;;;;;;;MAiBG,mBAAA,GAAP,UAAmBC,SAAnB,EAAiE5B,OAAjE;;;QAAiE,sBAAA,EAAA;UAAAA,YAAA;;;QAC/D,OAAO,CAAA,MAAA,KAAK6B,QAAL,CAAcD,SAAd,EAAyB5B,OAAzB,CAAA,UAAA,iBAAA,SAAA,MAAmC8B,OAAnC,KAA8C,IAArD;OADK;;;;;;;;;;;;;;;;;MAiBA,gBAAA,GAAP,UACEtC,MADF,EAEEQ,OAFF;;;QAEE,sBAAA,EAAA;UAAAA,YAAA;;;QAEA,IAAMW,GAAG,GAAG,KAAKC,IAAjB;QACA,IAAMH,UAAU,GAAG,KAAKC,WAAxB;QACA,IAAMf,IAAI,GAAG,KAAKa,KAAlB;QACA,IAAMuB,OAAO,GAAG,MAAA/B,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAE+B,OAAT,UAAA,iBAAA,KAAA,GAAoB,CAApC;;QACA,IAAMC,KAAK,qBAAO,KAAKC,aAAvB;;QACA,IAAMC,MAAM,GAAGF,KAAK,CAACE,MAArB;QACA,IAAMC,MAAM,GAAGxB,GAAG,GAAGhB,IAArB;QACA,IAAMyC,OAAO,GAAGpC,OAAO,CAACoC,OAAxB;QACA,IAAM3C,YAAY,GAAGO,OAAO,CAACP,YAA7B;QACA,IAAM4C,gBAAgB,GAAG;UAAE1B,GAAG,EAAE,CAAP;UAAUhB,IAAI,EAAE;SAAzC;QACA,IAAM2C,cAAc,GAAG;UAAE3B,GAAG,EAAEF,UAAP;UAAmBd,IAAI,EAAE;SAAhD;;QAEA,IAAIqC,KAAK,CAAC,CAAD,CAAL,CAASrB,GAAT,GAAe,CAAnB,EAAsB;UACpBqB,KAAK,CAACO,OAAN,CAAcF,gBAAd;;;QAEF,IAAIH,MAAM,IAAIF,KAAK,CAACE,MAAM,GAAG,CAAV,CAAL,CAAkBvB,GAAlB,GAAwBqB,KAAK,CAACE,MAAM,GAAG,CAAV,CAAL,CAAkBvC,IAA1C,GAAiDc,UAA/D,EAA2E;UACzEuB,KAAK,CAACQ,IAAN,CAAWF,cAAX;;;QAEF,IAAIG,YAAJ;;QAGA,IAAIjD,MAAM,KAAK,OAAf,EAAwB;UACtB,IAAImB,GAAG,GAAG,CAAV,EAAa;YACX,OAAO,IAAP;;;UAEF,IAAM+B,aAAa,GAAGV,KAAK,CAACW,MAAN,CAAa,UAAAC,IAAA;YACjC,IAAMC,QAAQ,GAAGD,IAAI,CAACjD,IAAtB;YACA,IAAMmD,IAAI,GAAGF,IAAI,CAACjC,GAAL,GAAWA,GAAxB;YACA,IAAMoC,KAAK,GAAGD,IAAI,GAAGD,QAArB;YAEA,OAAQC,IAAI,IAAI,CAAT,IACDC,KAAK,GAAG,CAAR,IAAa1D,cAAc,CAACyD,IAAD,EAAOC,KAAP,EAAc,KAAd,EAAqBtD,YAArB,CAD1B,IAEDsD,KAAK,IAAI,CAAT,KAAe,CAACF,QAAD,IAAajD,IAAI,CAACC,GAAL,CAASkD,KAAT,IAAkBF,QAAlB,IAA8Bd,OAA1D,CAFN;WALoB,CAAtB;UAUAU,YAAY,GAAIC,aAAa,CAAC,CAAD,CAAb,KAAqBL,gBAArB,IAAyCK,aAAa,CAAC,CAAD,CAAvD,IAA+DA,aAAa,CAAC,CAAD,CAA3F;SAdF,MAeO,IAAIlD,MAAM,KAAK,KAAf,EAAsB;UAC3B,IAAImB,GAAG,GAAGF,UAAU,GAAGd,IAAvB,EAA6B;YAC3B,OAAO,IAAP;;;UAEF,IAAM+C,aAAa,GAAGV,KAAK,CAACW,MAAN,CAAa,UAAAC,IAAA;YACjC,IAAMC,QAAQ,GAAGD,IAAI,CAACjD,IAAtB;YACA,IAAMmD,IAAI,GAAGF,IAAI,CAACjC,GAAL,GAAWkC,QAAX,GAAsBV,MAAnC;YACA,IAAMY,KAAK,GAAGD,IAAI,GAAGD,QAArB;YAEA,OAAOC,IAAI,IAAI,CAAR,IACDC,KAAK,GAAG,CAAR,IAAa1D,cAAc,CAAC0D,KAAD,EAAQD,IAAR,EAAc,OAAd,EAAuBrD,YAAvB,CAD1B,IAEDsD,KAAK,IAAI,CAAT,KAAe,CAACF,QAAD,IAAajD,IAAI,CAACC,GAAL,CAASkD,KAAT,IAAkBF,QAAlB,IAA8Bd,OAA1D,CAFN;WALoB,EAQnBiB,OARmB,EAAtB;UAUAP,YAAY,GAAIC,aAAa,CAAC,CAAD,CAAb,KAAqBJ,cAArB,IAAuCI,aAAa,CAAC,CAAD,CAArD,IAA6DA,aAAa,CAAC,CAAD,CAAzF;SAdK,MAeA,IAAIlD,MAAM,KAAK,MAAf,EAAuB;UAC5BiD,YAAY,GAAGT,KAAK,CAACW,MAAN,CAAa,UAAAC,IAAA;YAC1B,IAAMC,QAAQ,GAAGD,IAAI,CAACjD,IAAtB;YACA,IAAMmD,IAAI,GAAGF,IAAI,CAACjC,GAAL,GAAWkC,QAAX,GAAsBlC,GAAnC;YACA,IAAMoC,KAAK,GAAGD,IAAI,GAAGD,QAArB;YAEA,OAAOC,IAAI,IAAI,CAAR,IACDC,KAAK,GAAG,CAAR,IAAa1D,cAAc,CAAC0D,KAAD,EAAQD,IAAR,EAAc,OAAd,EAAuBrD,YAAvB,CAD1B,IAEDsD,KAAK,IAAI,CAAT,KAAe,CAACF,QAAD,IAAajD,IAAI,CAACC,GAAL,CAASkD,KAAT,IAAkBF,QAAlB,IAA8Bd,OAA1D,CAFN;WALa,EAQZiB,OARY,GAQF,CARE,KAQIX,gBARnB;SADK,MAUA,IAAI7C,MAAM,KAAK,MAAf,EAAuB;UAC5BiD,YAAY,GAAGT,KAAK,CAACW,MAAN,CAAa,UAAAC,IAAA;YAC1B,IAAMC,QAAQ,GAAGD,IAAI,CAACjD,IAAtB;YACA,IAAMmD,IAAI,GAAGF,IAAI,CAACjC,GAAL,GAAWwB,MAAxB;YACA,IAAMY,KAAK,GAAGD,IAAI,GAAGD,QAArB;YAEA,OAAOC,IAAI,IAAI,CAAR,IACDC,KAAK,GAAG,CAAR,IAAa1D,cAAc,CAACyD,IAAD,EAAOC,KAAP,EAAc,KAAd,EAAqBtD,YAArB,CAD1B,IAEDsD,KAAK,IAAI,CAAT,KAAe,CAACF,QAAD,IAAajD,IAAI,CAACC,GAAL,CAASkD,KAAT,IAAkBF,QAAlB,IAA8Bd,OAA1D,CAFN;WALa,EAQZ,CARY,KAQNO,cART;SADK,MAUA;UACL,OAAO,KAAKW,QAAL,CAAczD,MAAd,CAAP;;;QAEF,IAAI4C,OAAO,IAAIK,YAAf,EAA6B;UAC3B,IAAMS,aAAa,GAAGlB,KAAK,CAACmB,OAAN,CAAcV,YAAd,CAAtB;;UAEA,IAAIS,aAAa,GAAG,CAAC,CAArB,EAAwB;YACtBT,YAAY,GAAGT,KAAK,CAACkB,aAAa,GAAGd,OAAjB,CAApB;;;;QAGJ,OAAOK,YAAY,IAAI,IAAvB;OArFK;;;;;;;;;;;;;;;;;MAqGA,sBAAA,GAAP,UAAsBjD,MAAtB,EAA+EQ,OAA/E;QAA+E,sBAAA,EAAA;UAAAA,YAAA;;;QAC7E,IAAI4C,IAAI,GAAG,KAAKf,QAAL,CAAcrC,MAAd,EAAsBQ,OAAtB,CAAX;;QAEA,IAAI,CAAC4C,IAAL,EAAW;UACT;;;QAEF,IAAMQ,QAAQ,GAAGpD,OAAO,CAACoD,QAAR,IAAoB,CAArC;;QACA,IAAIC,aAAa,GAAG,KAAKC,iBAAL,CAAuBV,IAAvB,EAA6B5C,OAA7B,CAApB;;QAEA,IAAIjB,QAAQ,CAACS,MAAD,CAAR,IAAoBQ,OAAO,CAACuD,YAA5B,IAA4CF,aAAa,KAAK,KAAKzC,IAAvE,EAA6E;UAC3E,IAAMsC,aAAa,GAAG,KAAKjB,MAAL,CAAYkB,OAAZ,CAAoBP,IAApB,CAAtB;;UAEA,IAAIM,aAAa,KAAK,CAAC,CAAvB,EAA0B;YACxB;;;UAEF,IAAMd,OAAO,GAAG5C,MAAM,KAAK,OAAX,IAAsBA,MAAM,KAAK,MAAjC,GAA0C,CAAC,CAA3C,GAA+C,CAA/D;UACAoD,IAAI,GAAG,KAAKX,MAAL,CAAYiB,aAAa,GAAGd,OAA5B,CAAP;;UAEA,IAAI,CAACQ,IAAL,EAAW;YACT;;;UAEFS,aAAa,GAAG,KAAKC,iBAAL,CAAuBV,IAAvB,EAA6B5C,OAA7B,CAAhB;;;QAGF,KAAKwD,QAAL,CAAcH,aAAa,GAAG,KAAKzC,IAAnC,EAAyCwC,QAAzC;OAxBK;;;;;;;;;MAgCA,gBAAA,GAAP,UAAgBzC,GAAhB,EAA6ByC,QAA7B;QAA6B,uBAAA,EAAA;UAAAA,YAAA;;;QAC3B,KAAKK,qBAAL,CAA2B9C,GAA3B;;QACA,KAAK+C,KAAL,CAAYC,KAAZ,CAAkB;UAAEC,MAAM,EAAE,CAACjD;SAA7B,EAAoCyC,QAApC;OAFK;;;;;;;;;MAUA,gBAAA,GAAP,UAAgBzC,GAAhB,EAA6ByC,QAA7B;QAA6B,uBAAA,EAAA;UAAAA,YAAA;;;QAC3B,KAAKI,QAAL,CAAc7C,GAAG,GAAG,KAAKC,IAAzB,EAA+BwC,QAA/B;OADK;;;;;;;;MAQA,gBAAA,GAAP,UAAgBpB,KAAhB;QACE,KAAKC,MAAL,GAAcD,KAAd;OADK;;;;;;;MAOA,mBAAA,GAAP;QAAA,gBAAA;;QACE,IAAM6B,iBAAiB,GAAG,KAAKC,kBAA/B;QACA,IAAMC,YAAY,GAAG,KAAKjD,QAAL,CAAciD,YAAnC;QACA,IAAMC,cAAc,GAAG,KAAKC,eAA5B;;QACA,IAAMC,gBAAgB,GAAG,KAAKjC,MAAL,CAAYkC,GAAZ,CAAgB,UAAAvB,IAAA;UAAQ,OAAAA,IAAI,CAACd,OAAL;SAAxB,CAAzB;;QAEA,IAAMsC,YAAY,GAAG,GAAGC,KAAH,CAASC,IAAT,CACnBP,YAAY,GAAGF,iBAAiB,CAACU,gBAAlB,CAAmCR,YAAnC,CAAH,GAAsDF,iBAAiB,CAACW,QADjE,CAArB;QAGA,KAAKC,QAAL,CAAcL,YAAY,CAACD,GAAb,CAAiB,UAACjF,EAAD;UAAQ,OAAAgB,KAAI,CAAC+C,QAAL,CAAc/D,EAAd,CAAA;SAAzB,CAAd;;QAEA,IAAI8E,cAAJ,EAAoB;UAClB,IAAMU,SAAO,GAAGC,MAAI,CAACT,gBAAD,EAAmBE,YAAnB,CAApB;UACA,IAAMQ,OAAO,GAAGF,SAAO,CAACE,OAAxB;UACA,IAAMC,KAAK,GAAGH,SAAO,CAACG,KAAtB;UAEAD,OAAO,CAACE,OAAR,CAAgB,UAACC,KAAD;YAAW,OAAAf,cAAc,CAACgB,SAAf,CAAyBN,SAAO,CAACO,QAAR,CAAiBF,KAAjB,CAAzB,CAAA;WAA3B;UACAF,KAAK,CAACC,OAAN,CAAc,UAACC,KAAD;YAAW,OAAAf,cAAc,CAACkB,OAAf,CAAuBR,SAAO,CAACS,IAAR,CAAaJ,KAAb,CAAvB,CAAA;WAAzB;;OAjBG;;;;;;;MAyBA,uBAAA,GAAP;QACE,IAAMlB,iBAAiB,GAAG,KAAKC,kBAA/B;QACA,IAAM1C,UAAU,GAAG,KAAKN,QAAL,CAAcM,UAAjC;QAEA,IAAMzB,IAAI,GAAGyB,UAAU,GAAGyC,iBAAiB,CAACuB,WAArB,GAAmCvB,iBAAiB,CAACwB,YAA5E;QACA,IAAI5E,UAAU,GAAGW,UAAU,GAAGyC,iBAAiB,CAACyB,WAArB,GAAmCzB,iBAAiB,CAAC0B,YAAhF;;QAGA,IAAI9G,KAAK,IAAIgC,UAAU,KAAKd,IAAI,GAAG,CAAnC,EAAsC;UACpC,IAAM6F,KAAK,GAAGC,gBAAgB,CAAC5B,iBAAD,CAA9B;UACA,IAAM6B,SAAS,GAAGF,KAAK,CAACE,SAAxB;UACA,IAAMC,UAAU,GAAGvE,UAAU,GACzB,CAACwE,UAAU,CAACJ,KAAK,CAACK,eAAP,CAAV,IAAqC,CAAtC,KAA4CD,UAAU,CAACJ,KAAK,CAACM,gBAAP,CAAV,IAAsC,CAAlF,CADyB,GAEzB,CAACF,UAAU,CAACJ,KAAK,CAACO,cAAP,CAAV,IAAoC,CAArC,KAA2CH,UAAU,CAACJ,KAAK,CAACQ,iBAAP,CAAV,IAAuC,CAAlF,CAFJ;UAGA,IAAMC,OAAO,GAAGL,UAAU,CAACxE,UAAU,GAAGoE,KAAK,CAACU,KAAT,GAAiBV,KAAK,CAACW,MAAlC,CAAV,IAAuD,CAAvE;UACA,IAAMC,WAAW,GAAGH,OAAO,IAAIP,SAAS,KAAK,YAAd,GAA6BC,UAA7B,GAA0C,CAA9C,CAA3B,CAPoC;;UAUpC,IAAIhG,IAAI,GAAGyG,WAAP,IAAsBA,WAAW,GAAGzG,IAAI,GAAG,CAA/C,EAAkD;YAChDc,UAAU,GAAGd,IAAb;;;;QAGJ,KAAKa,KAAL,GAAab,IAAb;QACA,KAAKe,WAAL,GAAmBD,UAAnB;;QACA,KAAKF,cAAL;;QACA,KAAK8F,SAAL;OAzBK;;;;;;;MAwCA,mBAAA,GAAP;;;QACE,MAAA,KAAKC,SAAL,UAAA,iBAAA,SAAA,MAAgBC,QAAhB;QACA,MAAA,KAAKC,WAAL,UAAA,iBAAA,SAAA,MAAkBD,QAAlB;OAFK;;;;;;;MAQA,oBAAA,GAAP;;;QACE,MAAA,KAAKD,SAAL,UAAA,iBAAA,SAAA,MAAgBG,SAAhB;QACA,MAAA,KAAKD,WAAL,UAAA,iBAAA,SAAA,MAAkBC,SAAlB;OAFK;;;;;;;MAQA,YAAA,GAAP;QAAA,gBAAA;;;;QACE,IAAI,KAAK/C,KAAT,EAAgB;UACd;;;QAGF,IAAM3D,UAAU,GAAG,KAAK2B,WAAxB;QACA,IAAIxC,EAAJ;;QAEA,IAAIH,QAAQ,CAACgB,UAAD,CAAZ,EAA0B;UACxBb,EAAE,GAAGwH,QAAQ,CAACC,aAAT,CAAoC5G,UAApC,CAAL;SADF,MAEO,IAAId,iBAAiB,CAACc,UAAD,CAArB,EAAmC;UACxCb,EAAE,GAAGa,UAAL;SADK,MAEA,IAAI,WAAWA,UAAX,IAAyB,aAAaA,UAA1C,EAAsD;UAC3Db,EAAE,GAAGa,UAAU,CAAC6G,KAAX,IAAqB7G,UAAU,CAAC8G,OAArC;;;QAGF,IAAI,CAAC3H,EAAL,EAAS;UACP;;;QAGF,KAAK4E,kBAAL,GAA0B5E,EAA1B;QACA,IAAI4H,MAAM,GAAG,KAAb;QACA,IAAMjD,iBAAiB,GAAG,KAAKC,kBAA/B;QACA,IAAM9D,OAAO,GAAG,KAAKc,QAArB;QACA,IAAMiG,IAAI,GAAG,IAAIC,IAAJ,CAAS;UACpBpD,MAAM,EAAE;YACNqD,KAAK,EAAE,CAAC,CAACC,QAAF,EAAYA,QAAZ;;SAFE,EAIV;UACDC,YAAY,EAAE,KADb;UAEDC,KAAK,EAAE,CAFN;UAGDC,MAAM,EAAErH,OAAO,CAACqH;SAPL,EAQV;UACDzD,MAAM,EAAE;SATG,CAAb;QAWA,IAAI0D,MAAM,GAAG,KAAb;QAEAP,IAAI,CAACQ,EAAL,CAAQ;UACN,QAAQ,UAAAlH,CAAA;YACNiH,MAAM,GAAG,IAAT;YACAR,MAAM,GAAG,KAAT;;YACA,IAAMU,WAAW,GAAGtH,KAAI,CAACuH,eAAL,CAAqBpH,CAArB,CAApB;;YAEA,IAAI,CAACmH,WAAL,EAAkB;cAChB;;;YAEF,IAAIxH,OAAO,CAAC0H,cAAZ,EAA4B;cAC1BF,WAAW,CAACE,cAAZ;;WAVE;UAaN,UAAU,UAAArH,CAAA;YACR,IAAMmH,WAAW,GAAGtH,KAAI,CAACuH,eAAL,CAAqBpH,CAArB,CAApB;;YACA,IAAMsH,YAAY,GAAGzH,KAAI,CAAC0H,aAA1B;;YACA,IAAI5H,OAAO,CAACsB,YAAR,IAAwBpB,KAAI,CAAC2H,aAAL,CAAmBL,WAAnB,CAA5B,EAA6D;cAC3D;;;YAEFtH,KAAI,CAAC4H,cAAL,GAAsB,CAAC,CAACN,WAAF,IAAiBA,WAAW,CAACO,IAAZ,KAAqB,OAA5D;YACA7H,KAAI,CAAC8H,aAAL,GAAqB,CAAC,CAACR,WAAF,IAAiB,CAACtH,KAAI,CAAC4H,cAA5C;YACA5H,KAAI,CAAC+H,kBAAL,GAA0B,CAAC/H,KAAI,CAAC4H,cAAN,IAAwB,CAACR,MAAnD;YACAR,MAAM,GAAG,IAAT;YACA,IAAMlD,MAAM,GAAGvD,CAAC,CAAC6H,KAAF,CAAQtE,MAAvB;;YACA,IAAI,CAACvD,CAAC,CAAC8H,SAAH,IAAgBR,YAApB,EAAkC;cAChCA,YAAY,CAACS,WAAb,IAA4BxE,MAA5B;;cACA,IAAI5D,OAAO,CAACoB,UAAZ,EAAwB;gBACtByC,iBAAiB,CAACwE,UAAlB,GAA+BV,YAAY,CAACS,WAAb,GAA2BT,YAAY,CAACW,MAAvE;eADF,MAEO;gBACLzE,iBAAiB,CAAC0E,SAAlB,GAA8BZ,YAAY,CAACS,WAAb,GAA2BT,YAAY,CAACW,MAAtE;;aALJ,MAOO;cACLpI,KAAI,CAAC0H,aAAL,GAAqB,IAArB;;cACA,IAAI5H,OAAO,CAACoB,UAAZ,EAAwB;gBACtByC,iBAAiB,CAACwE,UAAlB,IAAgCzE,MAAhC;eADF,MAEO;gBACLC,iBAAiB,CAAC0E,SAAlB,IAA+B3E,MAA/B;;;;YAGJ,IAAI5D,OAAO,CAACqH,MAAZ,EAAoB;cAClBnH,KAAI,CAACsI,gBAAL,CAAsBhB,WAAtB;;WAxCE;UA2CN,WAAW,UAAAnH,CAAA;YACT,IAAI,CAACyG,MAAL,EAAa;cACXzG,CAAC,CAACoI,KAAF,cAAapI,CAAC,CAACqI,QAAf,EAA0B,CAA1B;;;YAEFpB,MAAM,GAAG,KAAT;YACAR,MAAM,GAAG,KAAT;;SAhDJ;QAoDA,KAAKpD,KAAL,GAAaqD,IAAb;;QACA,IAAI/G,OAAO,CAACqB,OAAZ,EAAqB;UACnB,KAAKiF,SAAL,GAAiB,IAAIqC,QAAJ,CAAa9E,iBAAb,EAAgC;YAC/C+E,kBAAkB,EAAE5I,OAAO,CAAC4I,kBADmB;YAE/CC,oBAAoB,EAAE7I,OAAO,CAAC6I,oBAFiB;YAG/CC,SAAS,EAAE,CAAC,OAAD,CAHoC;YAI/CC,WAAW,EAAE;WAJE,CAAjB;UAMAhC,IAAI,CAACiC,OAAL,CAAahJ,OAAO,CAACoB,UAAR,GAAqB,CAAC,QAAD,EAAW,EAAX,CAArB,GAAsC,CAAC,EAAD,EAAK,QAAL,CAAnD,EAAmE,KAAKkF,SAAxE;;;QAEF,IAAItG,OAAO,CAACsB,YAAZ,EAA0B;UACxB,KAAKkF,WAAL,GAAmB,IAAIyC,UAAJ,CAAepF,iBAAf,EAAkC;YACnDqF,aAAa,EAAE;WADE,CAAnB;UAGAnC,IAAI,CAACiC,OAAL,CAAahJ,OAAO,CAACoB,UAAR,GAAqB,CAAC,QAAD,EAAW,EAAX,CAArB,GAAsC,CAAC,EAAD,EAAK,QAAL,CAAnD,EAAmE,KAAKoF,WAAxE;;;QAEF,IAAIxG,OAAO,CAACyB,iBAAR,IAA6B9C,MAAM,CAACwK,cAAxC,EAAwD;UACtD,KAAKlF,eAAL,GAAuB,IAAIkF,cAAJ,CAAmB,UAACC,OAAD;YACxC,IAAMpH,KAAK,GAAG9B,KAAI,CAAC+B,MAAnB;YACA,IAAMC,MAAM,GAAGF,KAAK,CAACE,MAArB;YACA,IAAI6C,KAAK,GAAG7C,MAAZ;YAEAkH,OAAO,CAACtE,OAAR,CAAgB,UAACuE,KAAD;cACd,IAAIA,KAAK,CAAC7J,MAAN,KAAiBU,KAAI,CAAC4D,kBAA1B,EAA8C;gBAC5C,KAAK,IAAIwF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpH,MAApB,EAA4BoH,CAAC,EAA7B,EAAiC;kBAC/B,IAAItH,KAAK,CAACsH,CAAD,CAAL,CAASxH,OAAT,KAAqBuH,KAAK,CAAC7J,MAA/B,EAAuC;oBACrCuF,KAAK,GAAGnF,IAAI,CAAC2J,GAAL,CAASxE,KAAT,EAAgBuE,CAAhB,CAAR;oBACA;;;;aALR;;YAWA,KAAK,IAAIA,CAAC,GAAGvE,KAAb,EAAoBuE,CAAC,GAAGpH,MAAxB,EAAgCoH,CAAC,EAAjC,EAAqC;cACnCtH,KAAK,CAACsH,CAAD,CAAL,GAAWpJ,KAAI,CAAC+C,QAAL,CAAcjB,KAAK,CAACsH,CAAD,CAAL,CAASxH,OAAvB,CAAX;;;YAEF5B,KAAI,CAACE,eAAL;WAnBqB,CAAvB;;;QAwBF,KAAKoJ,MAAL;QAEA,MAAA,KAAKvF,eAAL,UAAA,iBAAA,SAAA,MAAsBiB,QAAQrB,kBAA9B;QACAA,iBAAiB,CAAC4F,gBAAlB,CAAmC,QAAnC,EAA6C,KAAKpD,SAAlD;QACA1H,MAAM,CAAC8K,gBAAP,CAAwB,QAAxB,EAAkC,KAAKD,MAAvC;OAtIK;;;;;;;MA4IA,eAAA,GAAP;;;QACE,MAAA,KAAK9F,KAAL,UAAA,iBAAA,SAAA,MAAYgG,SAAZ;QACA,KAAKC,WAAL;QACA,MAAA,KAAK7F,kBAAL,UAAA,iBAAA,SAAA,MAAyB8F,oBAAoB,UAAU,KAAKvD,UAA5D;QACA,MAAA,KAAKpC,eAAL,UAAA,iBAAA,SAAA,MAAsB4F,YAAtB;;QAEA,IAAI,OAAOlL,MAAP,KAAkB,WAAtB,EAAmC;UACjCA,MAAM,CAACiL,mBAAP,CAA2B,QAA3B,EAAqC,KAAKJ,MAA1C;;;QAEF,KAAKM,GAAL;QACA,KAAKxD,SAAL,GAAiB,IAAjB;QACA,KAAKE,WAAL,GAAmB,IAAnB;QACA,KAAK9C,KAAL,GAAa,IAAb;QACA,KAAKO,eAAL,GAAuB,IAAvB;OAbK;;MAeC,sBAAA,GAAR;QACE,IAAM7C,UAAU,GAAG,KAAKN,QAAL,CAAcM,UAAjC;QACA,IAAMyC,iBAAiB,GAAG,KAAKC,kBAA/B;QAEA,KAAKlD,IAAL,GAAYhB,IAAI,CAAC2J,GAAL,CACV,KAAK7I,WAAL,GAAmB,KAAKF,KADd,EAEVY,UAAU,GAAGyC,iBAAiB,CAACwE,UAArB,GAAkCxE,iBAAiB,CAAC0E,SAFpD,CAAZ;OAJM;;MASA,gBAAA,GAAR,UAAiBzG,OAAjB;QACE,IAAMV,UAAU,GAAG,KAAKN,QAAL,CAAcM,UAAjC;QAEA,OAAO;UACLU,OAAO,SADF;UAELnB,GAAG,EAAES,UAAU,GAAGU,OAAO,CAACiI,UAAX,GAAwBjI,OAAO,CAACkI,SAF1C;UAGLrK,IAAI,EAAEyB,UAAU,GAAGU,OAAO,CAACmI,WAAX,GAAyBnI,OAAO,CAACoI;SAHnD;OAHM;;MASA,uBAAA,GAAR,UAAwB7J,CAAxB;;;QACE,OAAO,CAAA,MAAAA,CAAC,SAAD,IAAAA,CAAC,WAAD,SAAA,GAAAA,CAAC,CAAE8J,UAAH,UAAA,iBAAA,SAAA,MAAeC,QAAf,IAA0B,MAAA/J,CAAC,CAAC8J,UAAF,UAAA,iBAAA,SAAA,MAAcC,QAAxC,GAAmD/J,CAAC,SAAD,IAAAA,CAAC,WAAD,SAAA,GAAAA,CAAC,CAAE8J,UAA7D;OADM;;MAGA,yBAAA,GAAR,UAA0BvH,IAA1B,EAA8C5C,OAA9C;QACE,IAAML,IAAI,GAAG,KAAKa,KAAlB;QACA,IAAMC,UAAU,GAAG,KAAKC,WAAxB;QACA,IAAM2J,KAAK,GAAGrK,OAAO,CAACqK,KAAR,IAAiB,OAA/B;QACA,IAAMC,OAAO,GAAGtK,OAAO,CAACsI,MAAR,IAAkB,CAAlC;QACA,IAAMiC,OAAO,GAAG3H,IAAK,CAACjC,GAAtB;QACA,IAAMkC,QAAQ,GAAGD,IAAK,CAACjD,IAAvB;QACA,IAAI6K,SAAS,GAAG,CAAhB;;QAEA,IAAIH,KAAK,KAAK,OAAd,EAAuB;UACrBG,SAAS,GAAGD,OAAO,GAAGD,OAAtB;SADF,MAEO,IAAID,KAAK,KAAK,KAAd,EAAqB;UAC1BG,SAAS,GAAGD,OAAO,GAAG1H,QAAV,GAAqBlD,IAArB,GAA4B2K,OAAxC;SADK,MAEA,IAAID,KAAK,KAAK,QAAd,EAAwB;UAC7BG,SAAS,GAAGD,OAAO,GAAG1H,QAAQ,GAAG,CAArB,GAAyBlD,IAAI,GAAG,CAAhC,GAAoC2K,OAAhD;;;QAEFE,SAAS,GAAG5K,IAAI,CAAC6K,GAAL,CAAS,CAAT,EAAY7K,IAAI,CAAC2J,GAAL,CAASiB,SAAT,EAAoB/J,UAAU,GAAGd,IAAjC,CAAZ,CAAZ;QACA,OAAO6K,SAAP;OAjBM;;MAmBA,qBAAA,GAAR,UAAsBhD,WAAtB;QACE,OAAO,CAAC,CAACA,WAAF,IAAiB,CAAAA,WAAW,SAAX,IAAAA,WAAW,WAAX,SAAA,GAAAA,WAAW,CAAEO,IAAb,MAAsB,OAAvC,KAAkDP,WAAW,SAAX,IAAAA,WAAW,WAAX,SAAA,GAAAA,WAAW,CAAEkD,MAA/D,MAAyElD,WAAW,SAAX,IAAAA,WAAW,WAAX,SAAA,GAAAA,WAAW,CAAEmD,MAAtF,CAAP;OADM;;MAGA,wBAAA,GAAR,UAAyBnD,WAAzB;QACE,IAAI,KAAKzG,YAAL,IAAqB,KAAKG,UAA9B,EAA0C;UACxCsG,WAAW,CAACoD,4BAAZ,GAA2C,KAA3C;;OAFI;;MAqDA,uBAAA,GAAR;QAAA,gBAAA;;QACE,IAAI,CAAC,KAAKC,YAAV,EAAwB;;;;;;UAMtB,KAAK5J,OAAL,CAAa,aAAb;;;QAEFtC,MAAM,CAACmM,YAAP,CAAoB,KAAKD,YAAzB;QACA,KAAKA,YAAL,GAAoBlM,MAAM,CAACoM,UAAP,CAAkB;UACpC,IAAMC,aAAa,GAAG9K,KAAI,CAAC4H,cAA3B;UACA,IAAMmD,YAAY,GAAG/K,KAAI,CAAC8H,aAA1B;UACA,IAAMkD,iBAAiB,GAAGhL,KAAI,CAAC+H,kBAA/B;UACA/H,KAAI,CAAC2K,YAAL,GAAoB,CAApB;;;;;;;;UAOA3K,KAAI,CAACe,OAAL,CAAa,cAAb,EAA6B;YAC3B+J,aAAa,eADc;YAE3BC,YAAY,cAFe;YAG3BC,iBAAiB,mBAHU;YAI3B/C,SAAS,EAAE6C,aAAa,IAAIC,YAAjB,IAAiC,CAACC;WAJ/C;;UAOAhL,KAAI,CAAC4H,cAAL,GAAsB,KAAtB;UACA5H,KAAI,CAAC8H,aAAL,GAAqB,KAArB;UACA9H,KAAI,CAAC+H,kBAAL,GAA0B,KAA1B;SApBkB,EAqBjB,KAAKnH,QAAL,CAAcU,cArBG,CAApB;OAVM;;MAkCA,6BAAA,GAAR,UAA8Bb,GAA9B;;;QAGE,KAAKiH,aAAL,GAAqB;UACnBQ,WAAW,EAAE,KAAKxH,IADC;UAEnB0H,MAAM,EAAE3H,GAAG,GAAG;SAFhB;OAHM;;MApmBkBwK,YAAzBC,QAAQ,CAAC,cAAD,gDAAiB;;MAiBFD,YAAvBC,QAAQ,CAAC,YAAD,8CAAe;;MAiBDD,YAAtBC,QAAQ,CAAC,WAAD,uCAAc;;MAxEnBC,QAAQ,eADbC,oBACKD,SAAA;MAkpBN,eAAA;IAAC,EAlpBsBE,UAAvB;;ICtCA;;;;;AAKA,IAAO,IAAMC,gBAAgB,GAAG,CAC9B,QAD8B,EAE9B,aAF8B,EAG9B,UAH8B,EAI9B,UAJ8B,EAK9B,UAL8B,EAM9B,gBAN8B,EAO9B,UAP8B,EAQ9B,iBAR8B,EAS9B,aAT8B,EAU9B,MAV8B,EAW9B,aAX8B,EAY9B,cAZ8B,CAAzB;AAeP,IAAO,IAAMC,eAAe,GAAG,CAC7B,YAD6B,EAE7B,UAF6B,EAG7B,YAH6B,EAI7B,UAJ6B,EAK7B,aAL6B,EAM7B,cAN6B,CAAxB;;ICJA,IAAMC,iBAAiB,GAM1B;MACFC,OAAO,EAAEH,gBADP;MAEFI,MAAM,EAAEH,eAFN;MAGFI,OAAO,YAACC;QACN,OAAO,IAAIT,QAAJ,CAAaS,IAAI,CAACC,SAAlB,wBAAkCD,IAAI,CAACE;UAAOzK,QAAQ,EAAE;UAAxD,CAAP;OAJA;MAMFI,IAAI,EAAJ,UAAKsK,QAAL,EAAeH,IAAf;QACE,IAAIA,IAAI,CAACE,KAAL,CAAWzK,QAAX,KAAwB,KAA5B,EAAmC;UACjC0K,QAAS,CAACtK,IAAV;;OARF;MAWF4F,EAAE,YAAC0E,UAAUC,MAAMC;QACjBF,QAAQ,CAAC1E,EAAT,CAAY2E,IAAZ,EAAkBC,QAAlB;OAZA;MAcFrC,GAAG,YAACmC,UAAUC,MAAMC;QAClBF,QAAQ,CAACnC,GAAT,CAAaoC,IAAb,EAAmBC,QAAnB;OAfA;MAiBFzC,OAAO,YAACuC;QACNA,QAAQ,CAACvC,OAAT;;IAlBA,CANG;;IChBP;;;;;;;;;;;;;;ICAA;;;;;AAKA;IAEA,KAAK,IAAMwC,IAAX,IAAmBE,OAAnB,EAA4B;MACzBf,QAAgB,CAACa,IAAD,CAAhB,GAA0BE,OAAe,CAACF,IAAD,CAAzC;IACF;;;;;;;;"}